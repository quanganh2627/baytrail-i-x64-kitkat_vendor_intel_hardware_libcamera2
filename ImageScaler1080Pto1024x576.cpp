/*
 * Copyright (c) 2012 Intel Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#define LOG_TAG "Camera_ImageScaler"
#include "AtomCommon.h"
#include "LogHelper.h"
#include "ImageScaler.h"

////////////////// TODO remove this BIG scaler from HAL after ZSL postview starts to work

namespace android {

void ImageScaler::downScaleNv12ImageFrom1080PTo1024x576(unsigned char *dst, const unsigned char *src, int dstStride, int srcStride)
{

    const int dstW = 1024;
    const int dstH = 576;
    const int srcW = 1920;
    const int srcH = 1080;

    if (!dstStride) {
       dstStride = dstW;
    }
    if (!srcStride) {
       srcStride = srcW;
    }

    // Y component

    // Processing 15 source Y rows to 8 dest rows in each loop
    for (int i = 0; i < dstH / 8; i++) {

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s0 = (uint32_t *)(&src[(i * 15 + 0) * srcStride]);
        uint32_t *s1 = (uint32_t *)(&src[(i * 15 + 1) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 0) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a0; // Input data row 0
            uint32_t a1; // Input data row 1

            a0 = *s0++;
            a1 = *s1++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                64 * ((a0 >> 0) & 0xff) + 56 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) + 49 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           8 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff) + 48 * ((a0 >> 24) & 0xff) +
                                           7 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff) + 42 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                               16 * ((a0 >> 24) & 0xff) +
                                                                                               14 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 2
                64 * ((a0 >> 0) & 0xff) + 40 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) + 35 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                          24 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff) + 32 * ((a0 >> 24) & 0xff) +
                                          21 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff) + 28 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                               32 * ((a0 >> 24) & 0xff) +
                                                                                               28 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 4
                64 * ((a0 >> 0) & 0xff) + 24 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) + 21 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          40 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff) + 16 * ((a0 >> 24) & 0xff) +
                                          35 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff) + 14 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               48 * ((a0 >> 24) & 0xff) +
                                                                                               42 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 6
                64 * ((a0 >> 0) & 0xff) +  8 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) +  7 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          56 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff)                            +
                                          49 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               64 * ((a0 >> 24) & 0xff) +
                                                                                               56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 8
                56 * ((a0 >> 0) & 0xff)                                                                                 +
                49 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 8 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff) + 48 * ((a0 >> 16) & 0xff)                            +
                 7 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff) + 42 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                    16 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                    14 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 10
                40 * ((a0 >> 0) & 0xff)                                                                                 +
                35 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                24 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff) + 32 * ((a0 >> 16) & 0xff)                            +
                21 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff) + 28 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                    32 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                    28 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 12
                24 * ((a0 >> 0) & 0xff)                                                                                 +
                21 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                40 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff) + 16 * ((a0 >> 16) & 0xff)                            +
                35 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff) + 14 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    48 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                    42 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 14
                 8 * ((a0 >> 0) & 0xff)                                                                                 +
                 7 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                56 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff)                                                       +
                49 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    64 * ((a0 >> 16) & 0xff) + 56 * ((a0 >> 24) & 0xff) +
                                                                    56 * ((a1 >> 16) & 0xff) + 49 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                8 * ((a0 >> 24) & 0xff) +
                                                                                                7 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 17
                64 * ((a0 >> 0) & 0xff) + 48 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) + 42 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                          16 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff) + 40 * ((a0 >> 24) & 0xff) +
                                          14 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff) + 35 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                               24 * ((a0 >> 24) & 0xff) +
                                                                                               21 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 19
                64 * ((a0 >> 0) & 0xff) + 32 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) + 28 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                          32 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff) + 24 * ((a0 >> 24) & 0xff) +
                                          28 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff) + 21 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               40 * ((a0 >> 24) & 0xff) +
                                                                                               35 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 21
                64 * ((a0 >> 0) & 0xff) + 16 * ((a0 >> 8) & 0xff)                                                       +
                56 * ((a1 >> 0) & 0xff) + 14 * ((a1 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          48 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 16) & 0xff) +  8 * ((a0 >> 24) & 0xff) +
                                          42 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 16) & 0xff) +  7 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               56 * ((a0 >> 24) & 0xff) +
                                                                                               49 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 23
                64 * ((a0 >> 0) & 0xff)                                                                                 +
                56 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          64 * ((a0 >> 8) & 0xff) + 56 * ((a0 >> 16) & 0xff)                            +
                                          56 * ((a1 >> 8) & 0xff) + 49 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     8 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                     7 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 25
                48 * ((a0 >> 0) & 0xff)                                                                                 +
                42 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                16 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff) + 40 * ((a0 >> 16) & 0xff)                            +
                14 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff) + 35 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                    24 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                    21 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 27
                32 * ((a0 >> 0) & 0xff)                                                                                 +
                28 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                32 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff) + 24 * ((a0 >> 16) & 0xff)                            +
                28 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff) + 21 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    40 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                    35 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            t = t +  // Output pixel 29
                16 * ((a0 >> 0) & 0xff)                                                                                 +
                14 * ((a1 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                48 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 8) & 0xff) +  8 * ((a0 >> 16) & 0xff)                            +
                42 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 8) & 0xff) +  7 * ((a1 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    56 * ((a0 >> 16) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                                                                    49 * ((a1 >> 16) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s1 = (uint32_t *)(&src[(i * 15 + 1) * srcStride]);
        uint32_t *s2 = (uint32_t *)(&src[(i * 15 + 2) * srcStride]);
        uint32_t *s3 = (uint32_t *)(&src[(i * 15 + 3) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 1) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a1; // Input data row 1
            uint32_t a2; // Input data row 2
            uint32_t a3; // Input data row 3

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                 8 * ((a1 >> 0) & 0xff) +  7 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) + 56 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) + 42 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           1 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff) +  6 * ((a1 >> 24) & 0xff) +
                                           8 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff) + 48 * ((a2 >> 24) & 0xff) +
                                           6 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff) + 36 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                                2 * ((a1 >> 24) & 0xff) +
                                                                                               16 * ((a2 >> 24) & 0xff) +
                                                                                               12 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 2
                 8 * ((a1 >> 0) & 0xff) +  5 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) + 40 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) + 30 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                           3 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff) +  4 * ((a1 >> 24) & 0xff) +
                                          24 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff) + 32 * ((a2 >> 24) & 0xff) +
                                          18 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff) + 24 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                                4 * ((a1 >> 24) & 0xff) +
                                                                                               32 * ((a2 >> 24) & 0xff) +
                                                                                               24 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 4
                 8 * ((a1 >> 0) & 0xff) +  3 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) + 24 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) + 18 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                           5 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff) +  2 * ((a1 >> 24) & 0xff) +
                                          40 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff) + 16 * ((a2 >> 24) & 0xff) +
                                          30 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff) + 12 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                                6 * ((a1 >> 24) & 0xff) +
                                                                                               48 * ((a2 >> 24) & 0xff) +
                                                                                               36 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 6
                 8 * ((a1 >> 0) & 0xff) +  1 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) +  8 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) +  6 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                           7 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff)                            +
                                          56 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff)                            +
                                          42 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                                8 * ((a1 >> 24) & 0xff) +
                                                                                               64 * ((a2 >> 24) & 0xff) +
                                                                                               48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 8
                 7 * ((a1 >> 0) & 0xff)                                                                                 +
                56 * ((a2 >> 0) & 0xff)                                                                                 +
                42 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 1 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff) +  6 * ((a1 >> 16) & 0xff)                            +
                 8 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff) + 48 * ((a2 >> 16) & 0xff)                            +
                 6 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff) + 36 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                     2 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                    16 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                    12 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 10
                 5 * ((a1 >> 0) & 0xff)                                                                                 +
                40 * ((a2 >> 0) & 0xff)                                                                                 +
                30 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                 3 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff) +  4 * ((a1 >> 16) & 0xff)                            +
                24 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff) + 32 * ((a2 >> 16) & 0xff)                            +
                18 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff) + 24 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                     4 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                    32 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                    24 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 12
                 3 * ((a1 >> 0) & 0xff)                                                                                 +
                24 * ((a2 >> 0) & 0xff)                                                                                 +
                18 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                 5 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff) +  2 * ((a1 >> 16) & 0xff)                            +
                40 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff) + 16 * ((a2 >> 16) & 0xff)                            +
                30 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff) + 12 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                     6 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                    48 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                    36 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 14
                 1 * ((a1 >> 0) & 0xff)                                                                                 +
                 8 * ((a2 >> 0) & 0xff)                                                                                 +
                 6 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                 7 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff)                                                       +
                56 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff)                                                       +
                42 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                     8 * ((a1 >> 16) & 0xff) +  7 * ((a1 >> 24) & 0xff) +
                                                                    64 * ((a2 >> 16) & 0xff) + 56 * ((a2 >> 24) & 0xff) +
                                                                    48 * ((a3 >> 16) & 0xff) + 42 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                1 * ((a1 >> 24) & 0xff) +
                                                                                                8 * ((a2 >> 24) & 0xff) +
                                                                                                6 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 17
                 8 * ((a1 >> 0) & 0xff) +  6 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) + 48 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) + 36 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                           2 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff) +  5 * ((a1 >> 24) & 0xff) +
                                          16 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff) + 40 * ((a2 >> 24) & 0xff) +
                                          12 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff) + 30 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                                3 * ((a1 >> 24) & 0xff) +
                                                                                               24 * ((a2 >> 24) & 0xff) +
                                                                                               18 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 19
                 8 * ((a1 >> 0) & 0xff) +  4 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) + 32 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) + 24 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                           4 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff) +  3 * ((a1 >> 24) & 0xff) +
                                          32 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff) + 24 * ((a2 >> 24) & 0xff) +
                                          24 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff) + 18 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                                5 * ((a1 >> 24) & 0xff) +
                                                                                               40 * ((a2 >> 24) & 0xff) +
                                                                                               30 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 21
                 8 * ((a1 >> 0) & 0xff) +  2 * ((a1 >> 8) & 0xff)                                                       +
                64 * ((a2 >> 0) & 0xff) + 16 * ((a2 >> 8) & 0xff)                                                       +
                48 * ((a3 >> 0) & 0xff) + 12 * ((a3 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                           6 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 16) & 0xff) +  1 * ((a1 >> 24) & 0xff) +
                                          48 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 16) & 0xff) +  8 * ((a2 >> 24) & 0xff) +
                                          36 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 16) & 0xff) +  6 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                                7 * ((a1 >> 24) & 0xff) +
                                                                                               56 * ((a2 >> 24) & 0xff) +
                                                                                               42 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 23
                 8 * ((a1 >> 0) & 0xff)                                                                                 +
                64 * ((a2 >> 0) & 0xff)                                                                                 +
                48 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                           8 * ((a1 >> 8) & 0xff) +  7 * ((a1 >> 16) & 0xff)                            +
                                          64 * ((a2 >> 8) & 0xff) + 56 * ((a2 >> 16) & 0xff)                            +
                                          48 * ((a3 >> 8) & 0xff) + 42 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     1 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                     8 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                     6 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 25
                 6 * ((a1 >> 0) & 0xff)                                                                                 +
                48 * ((a2 >> 0) & 0xff)                                                                                 +
                36 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                 2 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff) +  5 * ((a1 >> 16) & 0xff)                            +
                16 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff) + 40 * ((a2 >> 16) & 0xff)                            +
                12 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff) + 30 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                     3 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                    24 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                    18 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 27
                 4 * ((a1 >> 0) & 0xff)                                                                                 +
                32 * ((a2 >> 0) & 0xff)                                                                                 +
                24 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                 4 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff) +  3 * ((a1 >> 16) & 0xff)                            +
                32 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff) + 24 * ((a2 >> 16) & 0xff)                            +
                24 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff) + 18 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                     5 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                    40 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                    30 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            t = t +  // Output pixel 29
                 2 * ((a1 >> 0) & 0xff)                                                                                 +
                16 * ((a2 >> 0) & 0xff)                                                                                 +
                12 * ((a3 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                 6 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 8) & 0xff) +  1 * ((a1 >> 16) & 0xff)                            +
                48 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 8) & 0xff) +  8 * ((a2 >> 16) & 0xff)                            +
                36 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 8) & 0xff) +  6 * ((a3 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                     7 * ((a1 >> 16) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                                                                    56 * ((a2 >> 16) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                                                                    42 * ((a3 >> 16) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s3 = (uint32_t *)(&src[(i * 15 + 3) * srcStride]);
        uint32_t *s4 = (uint32_t *)(&src[(i * 15 + 4) * srcStride]);
        uint32_t *s5 = (uint32_t *)(&src[(i * 15 + 5) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 2) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a3; // Input data row 3
            uint32_t a4; // Input data row 4
            uint32_t a5; // Input data row 5

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                16 * ((a3 >> 0) & 0xff) + 14 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) + 56 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) + 35 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           2 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff) + 12 * ((a3 >> 24) & 0xff) +
                                           8 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff) + 48 * ((a4 >> 24) & 0xff) +
                                           5 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff) + 30 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                                4 * ((a3 >> 24) & 0xff) +
                                                                                               16 * ((a4 >> 24) & 0xff) +
                                                                                               10 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 2
                16 * ((a3 >> 0) & 0xff) + 10 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) + 40 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) + 25 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                           6 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff) +  8 * ((a3 >> 24) & 0xff) +
                                          24 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff) + 32 * ((a4 >> 24) & 0xff) +
                                          15 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff) + 20 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                                8 * ((a3 >> 24) & 0xff) +
                                                                                               32 * ((a4 >> 24) & 0xff) +
                                                                                               20 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 4
                16 * ((a3 >> 0) & 0xff) +  6 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) + 24 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) + 15 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          10 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff) +  4 * ((a3 >> 24) & 0xff) +
                                          40 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff) + 16 * ((a4 >> 24) & 0xff) +
                                          25 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff) + 10 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               12 * ((a3 >> 24) & 0xff) +
                                                                                               48 * ((a4 >> 24) & 0xff) +
                                                                                               30 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 6
                16 * ((a3 >> 0) & 0xff) +  2 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) +  8 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) +  5 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          14 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff)                            +
                                          56 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff)                            +
                                          35 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               16 * ((a3 >> 24) & 0xff) +
                                                                                               64 * ((a4 >> 24) & 0xff) +
                                                                                               40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 8
                14 * ((a3 >> 0) & 0xff)                                                                                 +
                56 * ((a4 >> 0) & 0xff)                                                                                 +
                35 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 2 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff) + 12 * ((a3 >> 16) & 0xff)                            +
                 8 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff) + 48 * ((a4 >> 16) & 0xff)                            +
                 5 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff) + 30 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                     4 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                    16 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                    10 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 10
                10 * ((a3 >> 0) & 0xff)                                                                                 +
                40 * ((a4 >> 0) & 0xff)                                                                                 +
                25 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                 6 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff) +  8 * ((a3 >> 16) & 0xff)                            +
                24 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff) + 32 * ((a4 >> 16) & 0xff)                            +
                15 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff) + 20 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                     8 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                    32 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                    20 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 12
                 6 * ((a3 >> 0) & 0xff)                                                                                 +
                24 * ((a4 >> 0) & 0xff)                                                                                 +
                15 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                10 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff) +  4 * ((a3 >> 16) & 0xff)                            +
                40 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff) + 16 * ((a4 >> 16) & 0xff)                            +
                25 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff) + 10 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    12 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                    48 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                    30 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 14
                 2 * ((a3 >> 0) & 0xff)                                                                                 +
                 8 * ((a4 >> 0) & 0xff)                                                                                 +
                 5 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                14 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff)                                                       +
                56 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff)                                                       +
                35 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    16 * ((a3 >> 16) & 0xff) + 14 * ((a3 >> 24) & 0xff) +
                                                                    64 * ((a4 >> 16) & 0xff) + 56 * ((a4 >> 24) & 0xff) +
                                                                    40 * ((a5 >> 16) & 0xff) + 35 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                2 * ((a3 >> 24) & 0xff) +
                                                                                                8 * ((a4 >> 24) & 0xff) +
                                                                                                5 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 17
                16 * ((a3 >> 0) & 0xff) + 12 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) + 48 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) + 30 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                           4 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff) + 10 * ((a3 >> 24) & 0xff) +
                                          16 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff) + 40 * ((a4 >> 24) & 0xff) +
                                          10 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff) + 25 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                                6 * ((a3 >> 24) & 0xff) +
                                                                                               24 * ((a4 >> 24) & 0xff) +
                                                                                               15 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 19
                16 * ((a3 >> 0) & 0xff) +  8 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) + 32 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) + 20 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                           8 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff) +  6 * ((a3 >> 24) & 0xff) +
                                          32 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff) + 24 * ((a4 >> 24) & 0xff) +
                                          20 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff) + 15 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               10 * ((a3 >> 24) & 0xff) +
                                                                                               40 * ((a4 >> 24) & 0xff) +
                                                                                               25 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 21
                16 * ((a3 >> 0) & 0xff) +  4 * ((a3 >> 8) & 0xff)                                                       +
                64 * ((a4 >> 0) & 0xff) + 16 * ((a4 >> 8) & 0xff)                                                       +
                40 * ((a5 >> 0) & 0xff) + 10 * ((a5 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          12 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 16) & 0xff) +  2 * ((a3 >> 24) & 0xff) +
                                          48 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 16) & 0xff) +  8 * ((a4 >> 24) & 0xff) +
                                          30 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 16) & 0xff) +  5 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               14 * ((a3 >> 24) & 0xff) +
                                                                                               56 * ((a4 >> 24) & 0xff) +
                                                                                               35 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 23
                16 * ((a3 >> 0) & 0xff)                                                                                 +
                64 * ((a4 >> 0) & 0xff)                                                                                 +
                40 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          16 * ((a3 >> 8) & 0xff) + 14 * ((a3 >> 16) & 0xff)                            +
                                          64 * ((a4 >> 8) & 0xff) + 56 * ((a4 >> 16) & 0xff)                            +
                                          40 * ((a5 >> 8) & 0xff) + 35 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     2 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                     8 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                     5 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 25
                12 * ((a3 >> 0) & 0xff)                                                                                 +
                48 * ((a4 >> 0) & 0xff)                                                                                 +
                30 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                 4 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff) + 10 * ((a3 >> 16) & 0xff)                            +
                16 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff) + 40 * ((a4 >> 16) & 0xff)                            +
                10 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff) + 25 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                     6 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                    24 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                    15 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 27
                 8 * ((a3 >> 0) & 0xff)                                                                                 +
                32 * ((a4 >> 0) & 0xff)                                                                                 +
                20 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                 8 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff) +  6 * ((a3 >> 16) & 0xff)                            +
                32 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff) + 24 * ((a4 >> 16) & 0xff)                            +
                20 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff) + 15 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    10 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                    40 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                    25 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            t = t +  // Output pixel 29
                 4 * ((a3 >> 0) & 0xff)                                                                                 +
                16 * ((a4 >> 0) & 0xff)                                                                                 +
                10 * ((a5 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                12 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 8) & 0xff) +  2 * ((a3 >> 16) & 0xff)                            +
                48 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 8) & 0xff) +  8 * ((a4 >> 16) & 0xff)                            +
                30 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 8) & 0xff) +  5 * ((a5 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    14 * ((a3 >> 16) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                                                                    56 * ((a4 >> 16) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                                                                    35 * ((a5 >> 16) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s5 = (uint32_t *)(&src[(i * 15 + 5) * srcStride]);
        uint32_t *s6 = (uint32_t *)(&src[(i * 15 + 6) * srcStride]);
        uint32_t *s7 = (uint32_t *)(&src[(i * 15 + 7) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 3) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a5; // Input data row 5
            uint32_t a6; // Input data row 6
            uint32_t a7; // Input data row 7

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                24 * ((a5 >> 0) & 0xff) + 21 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) + 56 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) + 28 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           3 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff) + 18 * ((a5 >> 24) & 0xff) +
                                           8 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff) + 48 * ((a6 >> 24) & 0xff) +
                                           4 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 24 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                                6 * ((a5 >> 24) & 0xff) +
                                                                                               16 * ((a6 >> 24) & 0xff) +
                                                                                                8 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 2
                24 * ((a5 >> 0) & 0xff) + 15 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) + 40 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) + 20 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                           9 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff) + 12 * ((a5 >> 24) & 0xff) +
                                          24 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff) + 32 * ((a6 >> 24) & 0xff) +
                                          12 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 16 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                               12 * ((a5 >> 24) & 0xff) +
                                                                                               32 * ((a6 >> 24) & 0xff) +
                                                                                               16 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 4
                24 * ((a5 >> 0) & 0xff) +  9 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) + 24 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) + 12 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          15 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff) +  6 * ((a5 >> 24) & 0xff) +
                                          40 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff) + 16 * ((a6 >> 24) & 0xff) +
                                          20 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) +  8 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               18 * ((a5 >> 24) & 0xff) +
                                                                                               48 * ((a6 >> 24) & 0xff) +
                                                                                               24 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 6
                24 * ((a5 >> 0) & 0xff) +  3 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) +  8 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) +  4 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          21 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff)                            +
                                          56 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff)                            +
                                          28 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               24 * ((a5 >> 24) & 0xff) +
                                                                                               64 * ((a6 >> 24) & 0xff) +
                                                                                               32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 8
                21 * ((a5 >> 0) & 0xff)                                                                                 +
                56 * ((a6 >> 0) & 0xff)                                                                                 +
                28 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 3 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff) + 18 * ((a5 >> 16) & 0xff)                            +
                 8 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff) + 48 * ((a6 >> 16) & 0xff)                            +
                 4 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 24 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                     6 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                    16 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                     8 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 10
                15 * ((a5 >> 0) & 0xff)                                                                                 +
                40 * ((a6 >> 0) & 0xff)                                                                                 +
                20 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                 9 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff) + 12 * ((a5 >> 16) & 0xff)                            +
                24 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff) + 32 * ((a6 >> 16) & 0xff)                            +
                12 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 16 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                    12 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                    32 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                    16 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 12
                 9 * ((a5 >> 0) & 0xff)                                                                                 +
                24 * ((a6 >> 0) & 0xff)                                                                                 +
                12 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                15 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff) +  6 * ((a5 >> 16) & 0xff)                            +
                40 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff) + 16 * ((a6 >> 16) & 0xff)                            +
                20 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) +  8 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    18 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                    48 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                    24 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 14
                 3 * ((a5 >> 0) & 0xff)                                                                                 +
                 8 * ((a6 >> 0) & 0xff)                                                                                 +
                 4 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                21 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff)                                                       +
                56 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff)                                                       +
                28 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    24 * ((a5 >> 16) & 0xff) + 21 * ((a5 >> 24) & 0xff) +
                                                                    64 * ((a6 >> 16) & 0xff) + 56 * ((a6 >> 24) & 0xff) +
                                                                    32 * ((a7 >> 16) & 0xff) + 28 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                3 * ((a5 >> 24) & 0xff) +
                                                                                                8 * ((a6 >> 24) & 0xff) +
                                                                                                4 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 17
                24 * ((a5 >> 0) & 0xff) + 18 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) + 48 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) + 24 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                           6 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff) + 15 * ((a5 >> 24) & 0xff) +
                                          16 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff) + 40 * ((a6 >> 24) & 0xff) +
                                           8 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 20 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                                9 * ((a5 >> 24) & 0xff) +
                                                                                               24 * ((a6 >> 24) & 0xff) +
                                                                                               12 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 19
                24 * ((a5 >> 0) & 0xff) + 12 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) + 32 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) + 16 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                          12 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff) +  9 * ((a5 >> 24) & 0xff) +
                                          32 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff) + 24 * ((a6 >> 24) & 0xff) +
                                          16 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 12 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               15 * ((a5 >> 24) & 0xff) +
                                                                                               40 * ((a6 >> 24) & 0xff) +
                                                                                               20 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 21
                24 * ((a5 >> 0) & 0xff) +  6 * ((a5 >> 8) & 0xff)                                                       +
                64 * ((a6 >> 0) & 0xff) + 16 * ((a6 >> 8) & 0xff)                                                       +
                32 * ((a7 >> 0) & 0xff) +  8 * ((a7 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          18 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 16) & 0xff) +  3 * ((a5 >> 24) & 0xff) +
                                          48 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 16) & 0xff) +  8 * ((a6 >> 24) & 0xff) +
                                          24 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) +  4 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               21 * ((a5 >> 24) & 0xff) +
                                                                                               56 * ((a6 >> 24) & 0xff) +
                                                                                               28 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 23
                24 * ((a5 >> 0) & 0xff)                                                                                 +
                64 * ((a6 >> 0) & 0xff)                                                                                 +
                32 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          24 * ((a5 >> 8) & 0xff) + 21 * ((a5 >> 16) & 0xff)                            +
                                          64 * ((a6 >> 8) & 0xff) + 56 * ((a6 >> 16) & 0xff)                            +
                                          32 * ((a7 >> 8) & 0xff) + 28 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     3 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                     8 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                     4 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 25
                18 * ((a5 >> 0) & 0xff)                                                                                 +
                48 * ((a6 >> 0) & 0xff)                                                                                 +
                24 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                 6 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff) + 15 * ((a5 >> 16) & 0xff)                            +
                16 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff) + 40 * ((a6 >> 16) & 0xff)                            +
                 8 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 20 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                     9 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                    24 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                    12 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 27
                12 * ((a5 >> 0) & 0xff)                                                                                 +
                32 * ((a6 >> 0) & 0xff)                                                                                 +
                16 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                12 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff) +  9 * ((a5 >> 16) & 0xff)                            +
                32 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff) + 24 * ((a6 >> 16) & 0xff)                            +
                16 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 12 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    15 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                    40 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                    20 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            t = t +  // Output pixel 29
                 6 * ((a5 >> 0) & 0xff)                                                                                 +
                16 * ((a6 >> 0) & 0xff)                                                                                 +
                 8 * ((a7 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                18 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 8) & 0xff) +  3 * ((a5 >> 16) & 0xff)                            +
                48 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 8) & 0xff) +  8 * ((a6 >> 16) & 0xff)                            +
                24 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) +  4 * ((a7 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    21 * ((a5 >> 16) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                                                                    56 * ((a6 >> 16) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                                                                    28 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s7 = (uint32_t *)(&src[(i * 15 + 7) * srcStride]);
        uint32_t *s8 = (uint32_t *)(&src[(i * 15 + 8) * srcStride]);
        uint32_t *s9 = (uint32_t *)(&src[(i * 15 + 9) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 4) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a7; // Input data row 7
            uint32_t a8; // Input data row 8
            uint32_t a9; // Input data row 9

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                32 * ((a7 >> 0) & 0xff) + 28 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) + 56 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) + 21 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           4 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 24 * ((a7 >> 24) & 0xff) +
                                           8 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff) + 48 * ((a8 >> 24) & 0xff) +
                                           3 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff) + 18 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                                8 * ((a7 >> 24) & 0xff) +
                                                                                               16 * ((a8 >> 24) & 0xff) +
                                                                                                6 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 2
                32 * ((a7 >> 0) & 0xff) + 20 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) + 40 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) + 15 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                          12 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 16 * ((a7 >> 24) & 0xff) +
                                          24 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff) + 32 * ((a8 >> 24) & 0xff) +
                                           9 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff) + 12 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                               16 * ((a7 >> 24) & 0xff) +
                                                                                               32 * ((a8 >> 24) & 0xff) +
                                                                                               12 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 4
                32 * ((a7 >> 0) & 0xff) + 12 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) + 24 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) +  9 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          20 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) +  8 * ((a7 >> 24) & 0xff) +
                                          40 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff) + 16 * ((a8 >> 24) & 0xff) +
                                          15 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff) +  6 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               24 * ((a7 >> 24) & 0xff) +
                                                                                               48 * ((a8 >> 24) & 0xff) +
                                                                                               18 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 6
                32 * ((a7 >> 0) & 0xff) +  4 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) +  8 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) +  3 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          28 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff)                            +
                                          56 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff)                            +
                                          21 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               32 * ((a7 >> 24) & 0xff) +
                                                                                               64 * ((a8 >> 24) & 0xff) +
                                                                                               24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 8
                28 * ((a7 >> 0) & 0xff)                                                                                 +
                56 * ((a8 >> 0) & 0xff)                                                                                 +
                21 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 4 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 24 * ((a7 >> 16) & 0xff)                            +
                 8 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff) + 48 * ((a8 >> 16) & 0xff)                            +
                 3 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff) + 18 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                     8 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                    16 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                     6 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 10
                20 * ((a7 >> 0) & 0xff)                                                                                 +
                40 * ((a8 >> 0) & 0xff)                                                                                 +
                15 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                12 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 16 * ((a7 >> 16) & 0xff)                            +
                24 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff) + 32 * ((a8 >> 16) & 0xff)                            +
                 9 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff) + 12 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                    16 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                    32 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                    12 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 12
                12 * ((a7 >> 0) & 0xff)                                                                                 +
                24 * ((a8 >> 0) & 0xff)                                                                                 +
                 9 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                20 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) +  8 * ((a7 >> 16) & 0xff)                            +
                40 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff) + 16 * ((a8 >> 16) & 0xff)                            +
                15 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff) +  6 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    24 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                    48 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                    18 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 14
                 4 * ((a7 >> 0) & 0xff)                                                                                 +
                 8 * ((a8 >> 0) & 0xff)                                                                                 +
                 3 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                28 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff)                                                       +
                56 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff)                                                       +
                21 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    32 * ((a7 >> 16) & 0xff) + 28 * ((a7 >> 24) & 0xff) +
                                                                    64 * ((a8 >> 16) & 0xff) + 56 * ((a8 >> 24) & 0xff) +
                                                                    24 * ((a9 >> 16) & 0xff) + 21 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                4 * ((a7 >> 24) & 0xff) +
                                                                                                8 * ((a8 >> 24) & 0xff) +
                                                                                                3 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 17
                32 * ((a7 >> 0) & 0xff) + 24 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) + 48 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) + 18 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                           8 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 20 * ((a7 >> 24) & 0xff) +
                                          16 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff) + 40 * ((a8 >> 24) & 0xff) +
                                           6 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff) + 15 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                               12 * ((a7 >> 24) & 0xff) +
                                                                                               24 * ((a8 >> 24) & 0xff) +
                                                                                                9 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 19
                32 * ((a7 >> 0) & 0xff) + 16 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) + 32 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) + 12 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                          16 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) + 12 * ((a7 >> 24) & 0xff) +
                                          32 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff) + 24 * ((a8 >> 24) & 0xff) +
                                          12 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff) +  9 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               20 * ((a7 >> 24) & 0xff) +
                                                                                               40 * ((a8 >> 24) & 0xff) +
                                                                                               15 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 21
                32 * ((a7 >> 0) & 0xff) +  8 * ((a7 >> 8) & 0xff)                                                       +
                64 * ((a8 >> 0) & 0xff) + 16 * ((a8 >> 8) & 0xff)                                                       +
                24 * ((a9 >> 0) & 0xff) +  6 * ((a9 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          24 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 16) & 0xff) +  4 * ((a7 >> 24) & 0xff) +
                                          48 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 16) & 0xff) +  8 * ((a8 >> 24) & 0xff) +
                                          18 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 16) & 0xff) +  3 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               28 * ((a7 >> 24) & 0xff) +
                                                                                               56 * ((a8 >> 24) & 0xff) +
                                                                                               21 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 23
                32 * ((a7 >> 0) & 0xff)                                                                                 +
                64 * ((a8 >> 0) & 0xff)                                                                                 +
                24 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          32 * ((a7 >> 8) & 0xff) + 28 * ((a7 >> 16) & 0xff)                            +
                                          64 * ((a8 >> 8) & 0xff) + 56 * ((a8 >> 16) & 0xff)                            +
                                          24 * ((a9 >> 8) & 0xff) + 21 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     4 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                     8 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                     3 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 25
                24 * ((a7 >> 0) & 0xff)                                                                                 +
                48 * ((a8 >> 0) & 0xff)                                                                                 +
                18 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                 8 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 20 * ((a7 >> 16) & 0xff)                            +
                16 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff) + 40 * ((a8 >> 16) & 0xff)                            +
                 6 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff) + 15 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                    12 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                    24 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                     9 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 27
                16 * ((a7 >> 0) & 0xff)                                                                                 +
                32 * ((a8 >> 0) & 0xff)                                                                                 +
                12 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                16 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) + 12 * ((a7 >> 16) & 0xff)                            +
                32 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff) + 24 * ((a8 >> 16) & 0xff)                            +
                12 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff) +  9 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    20 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                    40 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                    15 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            t = t +  // Output pixel 29
                 8 * ((a7 >> 0) & 0xff)                                                                                 +
                16 * ((a8 >> 0) & 0xff)                                                                                 +
                 6 * ((a9 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                24 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 8) & 0xff) +  4 * ((a7 >> 16) & 0xff)                            +
                48 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 8) & 0xff) +  8 * ((a8 >> 16) & 0xff)                            +
                18 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 8) & 0xff) +  3 * ((a9 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    28 * ((a7 >> 16) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                                                                    56 * ((a8 >> 16) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                                                                    21 * ((a9 >> 16) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s9 = (uint32_t *)(&src[(i * 15 + 9) * srcStride]);
        uint32_t *s10 = (uint32_t *)(&src[(i * 15 + 10) * srcStride]);
        uint32_t *s11 = (uint32_t *)(&src[(i * 15 + 11) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 5) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a9; // Input data row 9
            uint32_t a10; // Input data row 10
            uint32_t a11; // Input data row 11

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                40 * ((a9 >> 0) & 0xff) + 35 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) + 56 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) + 14 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           5 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff) + 30 * ((a9 >> 24) & 0xff) +
                                           8 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff) + 48 * ((a10 >> 24) & 0xff) +
                                           2 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff) + 12 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                               10 * ((a9 >> 24) & 0xff) +
                                                                                               16 * ((a10 >> 24) & 0xff) +
                                                                                                4 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 2
                40 * ((a9 >> 0) & 0xff) + 25 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) + 40 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) + 10 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                          15 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff) + 20 * ((a9 >> 24) & 0xff) +
                                          24 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff) + 32 * ((a10 >> 24) & 0xff) +
                                           6 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff) +  8 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                               20 * ((a9 >> 24) & 0xff) +
                                                                                               32 * ((a10 >> 24) & 0xff) +
                                                                                                8 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 4
                40 * ((a9 >> 0) & 0xff) + 15 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) + 24 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) +  6 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          25 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff) + 10 * ((a9 >> 24) & 0xff) +
                                          40 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff) + 16 * ((a10 >> 24) & 0xff) +
                                          10 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff) +  4 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               30 * ((a9 >> 24) & 0xff) +
                                                                                               48 * ((a10 >> 24) & 0xff) +
                                                                                               12 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 6
                40 * ((a9 >> 0) & 0xff) +  5 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) +  8 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) +  2 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          35 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff)                            +
                                          56 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff)                            +
                                          14 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               40 * ((a9 >> 24) & 0xff) +
                                                                                               64 * ((a10 >> 24) & 0xff) +
                                                                                               16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 8
                35 * ((a9 >> 0) & 0xff)                                                                                 +
                56 * ((a10 >> 0) & 0xff)                                                                                 +
                14 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 5 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff) + 30 * ((a9 >> 16) & 0xff)                            +
                 8 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff) + 48 * ((a10 >> 16) & 0xff)                            +
                 2 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff) + 12 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                    10 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                    16 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                     4 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 10
                25 * ((a9 >> 0) & 0xff)                                                                                 +
                40 * ((a10 >> 0) & 0xff)                                                                                 +
                10 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                15 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff) + 20 * ((a9 >> 16) & 0xff)                            +
                24 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff) + 32 * ((a10 >> 16) & 0xff)                            +
                 6 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff) +  8 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                    20 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                    32 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                     8 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 12
                15 * ((a9 >> 0) & 0xff)                                                                                 +
                24 * ((a10 >> 0) & 0xff)                                                                                 +
                 6 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                25 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff) + 10 * ((a9 >> 16) & 0xff)                            +
                40 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff) + 16 * ((a10 >> 16) & 0xff)                            +
                10 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff) +  4 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    30 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                    48 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                    12 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 14
                 5 * ((a9 >> 0) & 0xff)                                                                                 +
                 8 * ((a10 >> 0) & 0xff)                                                                                 +
                 2 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                35 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff)                                                       +
                56 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff)                                                       +
                14 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    40 * ((a9 >> 16) & 0xff) + 35 * ((a9 >> 24) & 0xff) +
                                                                    64 * ((a10 >> 16) & 0xff) + 56 * ((a10 >> 24) & 0xff) +
                                                                    16 * ((a11 >> 16) & 0xff) + 14 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                5 * ((a9 >> 24) & 0xff) +
                                                                                                8 * ((a10 >> 24) & 0xff) +
                                                                                                2 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 17
                40 * ((a9 >> 0) & 0xff) + 30 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) + 48 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) + 12 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                          10 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff) + 25 * ((a9 >> 24) & 0xff) +
                                          16 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff) + 40 * ((a10 >> 24) & 0xff) +
                                           4 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff) + 10 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                               15 * ((a9 >> 24) & 0xff) +
                                                                                               24 * ((a10 >> 24) & 0xff) +
                                                                                                6 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 19
                40 * ((a9 >> 0) & 0xff) + 20 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) + 32 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) +  8 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                          20 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff) + 15 * ((a9 >> 24) & 0xff) +
                                          32 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff) + 24 * ((a10 >> 24) & 0xff) +
                                           8 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff) +  6 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               25 * ((a9 >> 24) & 0xff) +
                                                                                               40 * ((a10 >> 24) & 0xff) +
                                                                                               10 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 21
                40 * ((a9 >> 0) & 0xff) + 10 * ((a9 >> 8) & 0xff)                                                       +
                64 * ((a10 >> 0) & 0xff) + 16 * ((a10 >> 8) & 0xff)                                                       +
                16 * ((a11 >> 0) & 0xff) +  4 * ((a11 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          30 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 16) & 0xff) +  5 * ((a9 >> 24) & 0xff) +
                                          48 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 16) & 0xff) +  8 * ((a10 >> 24) & 0xff) +
                                          12 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 16) & 0xff) +  2 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               35 * ((a9 >> 24) & 0xff) +
                                                                                               56 * ((a10 >> 24) & 0xff) +
                                                                                               14 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 23
                40 * ((a9 >> 0) & 0xff)                                                                                 +
                64 * ((a10 >> 0) & 0xff)                                                                                 +
                16 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          40 * ((a9 >> 8) & 0xff) + 35 * ((a9 >> 16) & 0xff)                            +
                                          64 * ((a10 >> 8) & 0xff) + 56 * ((a10 >> 16) & 0xff)                            +
                                          16 * ((a11 >> 8) & 0xff) + 14 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     5 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                     8 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                     2 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 25
                30 * ((a9 >> 0) & 0xff)                                                                                 +
                48 * ((a10 >> 0) & 0xff)                                                                                 +
                12 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                10 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff) + 25 * ((a9 >> 16) & 0xff)                            +
                16 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff) + 40 * ((a10 >> 16) & 0xff)                            +
                 4 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff) + 10 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                    15 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                    24 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                     6 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 27
                20 * ((a9 >> 0) & 0xff)                                                                                 +
                32 * ((a10 >> 0) & 0xff)                                                                                 +
                 8 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                20 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff) + 15 * ((a9 >> 16) & 0xff)                            +
                32 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff) + 24 * ((a10 >> 16) & 0xff)                            +
                 8 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff) +  6 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    25 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                    40 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                    10 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            t = t +  // Output pixel 29
                10 * ((a9 >> 0) & 0xff)                                                                                 +
                16 * ((a10 >> 0) & 0xff)                                                                                 +
                 4 * ((a11 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                30 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 8) & 0xff) +  5 * ((a9 >> 16) & 0xff)                            +
                48 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 8) & 0xff) +  8 * ((a10 >> 16) & 0xff)                            +
                12 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 8) & 0xff) +  2 * ((a11 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    35 * ((a9 >> 16) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                                                                    56 * ((a10 >> 16) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                                                                    14 * ((a11 >> 16) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s11 = (uint32_t *)(&src[(i * 15 + 11) * srcStride]);
        uint32_t *s12 = (uint32_t *)(&src[(i * 15 + 12) * srcStride]);
        uint32_t *s13 = (uint32_t *)(&src[(i * 15 + 13) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 6) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a11; // Input data row 11
            uint32_t a12; // Input data row 12
            uint32_t a13; // Input data row 13

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                48 * ((a11 >> 0) & 0xff) + 42 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) + 56 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  7 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           6 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff) + 36 * ((a11 >> 24) & 0xff) +
                                           8 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff) + 48 * ((a12 >> 24) & 0xff) +
                                           1 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff) +  6 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                               12 * ((a11 >> 24) & 0xff) +
                                                                                               16 * ((a12 >> 24) & 0xff) +
                                                                                                2 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 2
                48 * ((a11 >> 0) & 0xff) + 30 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) + 40 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  5 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                          18 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff) + 24 * ((a11 >> 24) & 0xff) +
                                          24 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff) + 32 * ((a12 >> 24) & 0xff) +
                                           3 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff) +  4 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                               24 * ((a11 >> 24) & 0xff) +
                                                                                               32 * ((a12 >> 24) & 0xff) +
                                                                                                4 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 4
                48 * ((a11 >> 0) & 0xff) + 18 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) + 24 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  3 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          30 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff) + 12 * ((a11 >> 24) & 0xff) +
                                          40 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff) + 16 * ((a12 >> 24) & 0xff) +
                                           5 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff) +  2 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               36 * ((a11 >> 24) & 0xff) +
                                                                                               48 * ((a12 >> 24) & 0xff) +
                                                                                                6 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 6
                48 * ((a11 >> 0) & 0xff) +  6 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) +  8 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  1 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          42 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff)                            +
                                          56 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff)                            +
                                           7 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               48 * ((a11 >> 24) & 0xff) +
                                                                                               64 * ((a12 >> 24) & 0xff) +
                                                                                                8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 8
                42 * ((a11 >> 0) & 0xff)                                                                                 +
                56 * ((a12 >> 0) & 0xff)                                                                                 +
                 7 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 6 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff) + 36 * ((a11 >> 16) & 0xff)                            +
                 8 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff) + 48 * ((a12 >> 16) & 0xff)                            +
                 1 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff) +  6 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                    12 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                    16 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     2 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 10
                30 * ((a11 >> 0) & 0xff)                                                                                 +
                40 * ((a12 >> 0) & 0xff)                                                                                 +
                 5 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                18 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff) + 24 * ((a11 >> 16) & 0xff)                            +
                24 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff) + 32 * ((a12 >> 16) & 0xff)                            +
                 3 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff) +  4 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                    24 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                    32 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     4 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 12
                18 * ((a11 >> 0) & 0xff)                                                                                 +
                24 * ((a12 >> 0) & 0xff)                                                                                 +
                 3 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                30 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff) + 12 * ((a11 >> 16) & 0xff)                            +
                40 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff) + 16 * ((a12 >> 16) & 0xff)                            +
                 5 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff) +  2 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    36 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                    48 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     6 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 14
                 6 * ((a11 >> 0) & 0xff)                                                                                 +
                 8 * ((a12 >> 0) & 0xff)                                                                                 +
                 1 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                42 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff)                                                       +
                56 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff)                                                       +
                 7 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    48 * ((a11 >> 16) & 0xff) + 42 * ((a11 >> 24) & 0xff) +
                                                                    64 * ((a12 >> 16) & 0xff) + 56 * ((a12 >> 24) & 0xff) +
                                                                     8 * ((a13 >> 16) & 0xff) +  7 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                6 * ((a11 >> 24) & 0xff) +
                                                                                                8 * ((a12 >> 24) & 0xff) +
                                                                                                1 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 17
                48 * ((a11 >> 0) & 0xff) + 36 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) + 48 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  6 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                          12 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff) + 30 * ((a11 >> 24) & 0xff) +
                                          16 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff) + 40 * ((a12 >> 24) & 0xff) +
                                           2 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff) +  5 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                               18 * ((a11 >> 24) & 0xff) +
                                                                                               24 * ((a12 >> 24) & 0xff) +
                                                                                                3 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 19
                48 * ((a11 >> 0) & 0xff) + 24 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) + 32 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  4 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                          24 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff) + 18 * ((a11 >> 24) & 0xff) +
                                          32 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff) + 24 * ((a12 >> 24) & 0xff) +
                                           4 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff) +  3 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               30 * ((a11 >> 24) & 0xff) +
                                                                                               40 * ((a12 >> 24) & 0xff) +
                                                                                                5 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 21
                48 * ((a11 >> 0) & 0xff) + 12 * ((a11 >> 8) & 0xff)                                                       +
                64 * ((a12 >> 0) & 0xff) + 16 * ((a12 >> 8) & 0xff)                                                       +
                 8 * ((a13 >> 0) & 0xff) +  2 * ((a13 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          36 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 16) & 0xff) +  6 * ((a11 >> 24) & 0xff) +
                                          48 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 16) & 0xff) +  8 * ((a12 >> 24) & 0xff) +
                                           6 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 16) & 0xff) +  1 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               42 * ((a11 >> 24) & 0xff) +
                                                                                               56 * ((a12 >> 24) & 0xff) +
                                                                                                7 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 23
                48 * ((a11 >> 0) & 0xff)                                                                                 +
                64 * ((a12 >> 0) & 0xff)                                                                                 +
                 8 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          48 * ((a11 >> 8) & 0xff) + 42 * ((a11 >> 16) & 0xff)                            +
                                          64 * ((a12 >> 8) & 0xff) + 56 * ((a12 >> 16) & 0xff)                            +
                                           8 * ((a13 >> 8) & 0xff) +  7 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     6 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                     8 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     1 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 25
                36 * ((a11 >> 0) & 0xff)                                                                                 +
                48 * ((a12 >> 0) & 0xff)                                                                                 +
                 6 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                12 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff) + 30 * ((a11 >> 16) & 0xff)                            +
                16 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff) + 40 * ((a12 >> 16) & 0xff)                            +
                 2 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff) +  5 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                    18 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                    24 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     3 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 27
                24 * ((a11 >> 0) & 0xff)                                                                                 +
                32 * ((a12 >> 0) & 0xff)                                                                                 +
                 4 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                24 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff) + 18 * ((a11 >> 16) & 0xff)                            +
                32 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff) + 24 * ((a12 >> 16) & 0xff)                            +
                 4 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff) +  3 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    30 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                    40 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     5 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            t = t +  // Output pixel 29
                12 * ((a11 >> 0) & 0xff)                                                                                 +
                16 * ((a12 >> 0) & 0xff)                                                                                 +
                 2 * ((a13 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                36 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 8) & 0xff) +  6 * ((a11 >> 16) & 0xff)                            +
                48 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 8) & 0xff) +  8 * ((a12 >> 16) & 0xff)                            +
                 6 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 8) & 0xff) +  1 * ((a13 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    42 * ((a11 >> 16) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                                                                    56 * ((a12 >> 16) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                                                                     7 * ((a13 >> 16) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s13 = (uint32_t *)(&src[(i * 15 + 13) * srcStride]);
        uint32_t *s14 = (uint32_t *)(&src[(i * 15 + 14) * srcStride]);
        uint32_t  *d = (uint32_t *)(&dst[(i * 8 + 7) * dstStride]);

        // Processing 60 source Y pixels to 32 dest pixels in each loop
        for (int j = 0; j < dstW; j += 32) {

            uint32_t t;  // Temp data (for constructing the output)
            uint32_t b;  // Output data buffer
            uint32_t a13; // Input data row 13
            uint32_t a14; // Input data row 14

            a13 = *s13++;
            a14 = *s14++;

            t =      // Output pixel 0  ---------------------------------------------------------------------------------
                56 * ((a13 >> 0) & 0xff) + 49 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) + 56 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 1  ---------------------------------------------------------------------------------
                                           7 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff) + 42 * ((a13 >> 24) & 0xff) +
                                           8 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff) + 48 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 2  ---------------------------------------------------------------------------------
                                                                                               14 * ((a13 >> 24) & 0xff) +
                                                                                               16 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 2
                56 * ((a13 >> 0) & 0xff) + 35 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) + 40 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 3  ---------------------------------------------------------------------------------
                                          21 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff) + 28 * ((a13 >> 24) & 0xff) +
                                          24 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff) + 32 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 4  ---------------------------------------------------------------------------------
                                                                                               28 * ((a13 >> 24) & 0xff) +
                                                                                               32 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 4
                56 * ((a13 >> 0) & 0xff) + 21 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) + 24 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 5  ---------------------------------------------------------------------------------
                                          35 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff) + 14 * ((a13 >> 24) & 0xff) +
                                          40 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff) + 16 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 6  ---------------------------------------------------------------------------------
                                                                                               42 * ((a13 >> 24) & 0xff) +
                                                                                               48 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 6
                56 * ((a13 >> 0) & 0xff) +  7 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) +  8 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 7  ---------------------------------------------------------------------------------
                                          49 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff)                            +
                                          56 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 8  ---------------------------------------------------------------------------------
                                                                                               56 * ((a13 >> 24) & 0xff) +
                                                                                               64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 8
                49 * ((a13 >> 0) & 0xff)                                                                                 +
                56 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 9  ---------------------------------------------------------------------------------
                 7 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff) + 42 * ((a13 >> 16) & 0xff)                            +
                 8 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff) + 48 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 10  ---------------------------------------------------------------------------------
                                                                    14 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                    16 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 10
                35 * ((a13 >> 0) & 0xff)                                                                                 +
                40 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 11  ---------------------------------------------------------------------------------
                21 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff) + 28 * ((a13 >> 16) & 0xff)                            +
                24 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff) + 32 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 12  ---------------------------------------------------------------------------------
                                                                    28 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                    32 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 12
                21 * ((a13 >> 0) & 0xff)                                                                                 +
                24 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 13  ---------------------------------------------------------------------------------
                35 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff) + 14 * ((a13 >> 16) & 0xff)                            +
                40 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff) + 16 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 14  ---------------------------------------------------------------------------------
                                                                    42 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                    48 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 14
                 7 * ((a13 >> 0) & 0xff)                                                                                 +
                 8 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 15  ---------------------------------------------------------------------------------
                49 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff)                                                       +
                56 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 16  ---------------------------------------------------------------------------------
                                                                    56 * ((a13 >> 16) & 0xff) + 49 * ((a13 >> 24) & 0xff) +
                                                                    64 * ((a14 >> 16) & 0xff) + 56 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 17  ---------------------------------------------------------------------------------
                                                                                                7 * ((a13 >> 24) & 0xff) +
                                                                                                8 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 17
                56 * ((a13 >> 0) & 0xff) + 42 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) + 48 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 18  ---------------------------------------------------------------------------------
                                          14 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff) + 35 * ((a13 >> 24) & 0xff) +
                                          16 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff) + 40 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 19  ---------------------------------------------------------------------------------
                                                                                               21 * ((a13 >> 24) & 0xff) +
                                                                                               24 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 19
                56 * ((a13 >> 0) & 0xff) + 28 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) + 32 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 20  ---------------------------------------------------------------------------------
                                          28 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff) + 21 * ((a13 >> 24) & 0xff) +
                                          32 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff) + 24 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 21  ---------------------------------------------------------------------------------
                                                                                               35 * ((a13 >> 24) & 0xff) +
                                                                                               40 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 21
                56 * ((a13 >> 0) & 0xff) + 14 * ((a13 >> 8) & 0xff)                                                       +
                64 * ((a14 >> 0) & 0xff) + 16 * ((a14 >> 8) & 0xff)                                                       ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 22  ---------------------------------------------------------------------------------
                                          42 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 16) & 0xff) +  7 * ((a13 >> 24) & 0xff) +
                                          48 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 16) & 0xff) +  8 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 23  ---------------------------------------------------------------------------------
                                                                                               49 * ((a13 >> 24) & 0xff) +
                                                                                               56 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 23
                56 * ((a13 >> 0) & 0xff)                                                                                 +
                64 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 24  ---------------------------------------------------------------------------------
                                          56 * ((a13 >> 8) & 0xff) + 49 * ((a13 >> 16) & 0xff)                            +
                                          64 * ((a14 >> 8) & 0xff) + 56 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 25  ---------------------------------------------------------------------------------
                                                                     7 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                     8 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 25
                42 * ((a13 >> 0) & 0xff)                                                                                 +
                48 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 26  ---------------------------------------------------------------------------------
                14 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff) + 35 * ((a13 >> 16) & 0xff)                            +
                16 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff) + 40 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 27  ---------------------------------------------------------------------------------
                                                                    21 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                    24 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 27
                28 * ((a13 >> 0) & 0xff)                                                                                 +
                32 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;

            t =      // Output pixel 28  ---------------------------------------------------------------------------------
                28 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff) + 21 * ((a13 >> 16) & 0xff)                            +
                32 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff) + 24 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b = t;

            t =      // Output pixel 29  ---------------------------------------------------------------------------------
                                                                    35 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                    40 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            t = t +  // Output pixel 29
                14 * ((a13 >> 0) & 0xff)                                                                                 +
                16 * ((a14 >> 0) & 0xff)                                                                                 ;
            t = (t + 112) / 225;
            b |= t << 8;

            t =      // Output pixel 30  ---------------------------------------------------------------------------------
                42 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 8) & 0xff) +  7 * ((a13 >> 16) & 0xff)                            +
                48 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 8) & 0xff) +  8 * ((a14 >> 16) & 0xff)                            ;
            t = (t + 112) / 225;
            b |= t << 16;

            t =      // Output pixel 31  ---------------------------------------------------------------------------------
                                                                    49 * ((a13 >> 16) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                                                                    56 * ((a14 >> 16) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;
            t = (t + 112) / 225;
            b |= t << 24;
            *d++ = b;
        }   }

    }

    // UV components
    src = &src[srcH * srcStride];
    dst = &dst[dstH * dstStride];

    // Processing 15 source UV rows to 8 dest rows in each loop
    for (int i = 0; i < (dstH / 2) / 8; i++) {

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s0 = (uint32_t *)(&src[(i * 15 + 0) * srcStride]);
        uint32_t *s1 = (uint32_t *)(&src[(i * 15 + 1) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 0) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a0; // Input data row 0
            uint32_t a1; // Input data row 1

            a0 = *s0++;
            a1 = *s1++;

            u =      // Output pixel pair 0  -----------------------
                64 * ((a0 >> 0) & 0xff) + 56 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) + 49 * ((a1 >> 16) & 0xff) ;
            v =
                64 * ((a0 >> 8) & 0xff) + 56 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) + 49 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           8 * ((a0 >> 16) & 0xff) +
                                           7 * ((a1 >> 16) & 0xff) ;
            v =
                                           8 * ((a0 >> 24) & 0xff) +
                                           7 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 1
                64 * ((a0 >> 0) & 0xff) + 48 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) + 42 * ((a1 >> 16) & 0xff) ;
            v = v +
                64 * ((a0 >> 8) & 0xff) + 48 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) + 42 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                          16 * ((a0 >> 16) & 0xff) +
                                          14 * ((a1 >> 16) & 0xff) ;
            v =
                                          16 * ((a0 >> 24) & 0xff) +
                                          14 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 2
                64 * ((a0 >> 0) & 0xff) + 40 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) + 35 * ((a1 >> 16) & 0xff) ;
            v = v +
                64 * ((a0 >> 8) & 0xff) + 40 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) + 35 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                          24 * ((a0 >> 16) & 0xff) +
                                          21 * ((a1 >> 16) & 0xff) ;
            v =
                                          24 * ((a0 >> 24) & 0xff) +
                                          21 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 3
                64 * ((a0 >> 0) & 0xff) + 32 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) + 28 * ((a1 >> 16) & 0xff) ;
            v = v +
                64 * ((a0 >> 8) & 0xff) + 32 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) + 28 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                          32 * ((a0 >> 16) & 0xff) +
                                          28 * ((a1 >> 16) & 0xff) ;
            v =
                                          32 * ((a0 >> 24) & 0xff) +
                                          28 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 4
                64 * ((a0 >> 0) & 0xff) + 24 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) + 21 * ((a1 >> 16) & 0xff) ;
            v = v +
                64 * ((a0 >> 8) & 0xff) + 24 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) + 21 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          40 * ((a0 >> 16) & 0xff) +
                                          35 * ((a1 >> 16) & 0xff) ;
            v =
                                          40 * ((a0 >> 24) & 0xff) +
                                          35 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 5
                64 * ((a0 >> 0) & 0xff) + 16 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) + 14 * ((a1 >> 16) & 0xff) ;
            v = v +
                64 * ((a0 >> 8) & 0xff) + 16 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) + 14 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          48 * ((a0 >> 16) & 0xff) +
                                          42 * ((a1 >> 16) & 0xff) ;
            v =
                                          48 * ((a0 >> 24) & 0xff) +
                                          42 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 6
                64 * ((a0 >> 0) & 0xff) +  8 * ((a0 >> 16) & 0xff) +
                56 * ((a1 >> 0) & 0xff) +  7 * ((a1 >> 16) & 0xff) ;
            v = v +
                64 * ((a0 >> 8) & 0xff) +  8 * ((a0 >> 24) & 0xff) +
                56 * ((a1 >> 8) & 0xff) +  7 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          56 * ((a0 >> 16) & 0xff) +
                                          49 * ((a1 >> 16) & 0xff) ;
            v =
                                          56 * ((a0 >> 24) & 0xff) +
                                          49 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 7
                64 * ((a0 >> 0) & 0xff)                            +
                56 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                64 * ((a0 >> 8) & 0xff)                            +
                56 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          64 * ((a0 >> 16) & 0xff) +
                                          56 * ((a1 >> 16) & 0xff) ;
            v =
                                          64 * ((a0 >> 24) & 0xff) +
                                          56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 8
                56 * ((a0 >> 0) & 0xff)                            +
                49 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                56 * ((a0 >> 8) & 0xff)                            +
                49 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 8 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                 7 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                 8 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                 7 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 9
                48 * ((a0 >> 0) & 0xff)                            +
                42 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                48 * ((a0 >> 8) & 0xff)                            +
                42 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                16 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                14 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                16 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                14 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 10
                40 * ((a0 >> 0) & 0xff)                            +
                35 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                40 * ((a0 >> 8) & 0xff)                            +
                35 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                24 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                21 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                24 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                21 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 11
                32 * ((a0 >> 0) & 0xff)                            +
                28 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                32 * ((a0 >> 8) & 0xff)                            +
                28 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                32 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                28 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                32 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                28 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 12
                24 * ((a0 >> 0) & 0xff)                            +
                21 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                24 * ((a0 >> 8) & 0xff)                            +
                21 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                40 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                35 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                40 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                35 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 13
                16 * ((a0 >> 0) & 0xff)                            +
                14 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                16 * ((a0 >> 8) & 0xff)                            +
                14 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                48 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                42 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                48 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                42 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;

            a0 = *s0++;
            a1 = *s1++;

            u = u +  // Output pixel pair 14
                 8 * ((a0 >> 0) & 0xff)                            +
                 7 * ((a1 >> 0) & 0xff)                            ;
            v = v +
                 8 * ((a0 >> 8) & 0xff)                            +
                 7 * ((a1 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                56 * ((a0 >> 0) & 0xff) + 64 * ((a0 >> 16) & 0xff) +
                49 * ((a1 >> 0) & 0xff) + 56 * ((a1 >> 16) & 0xff) ;
            v =
                56 * ((a0 >> 8) & 0xff) + 64 * ((a0 >> 24) & 0xff) +
                49 * ((a1 >> 8) & 0xff) + 56 * ((a1 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s1 = (uint32_t *)(&src[(i * 15 + 1) * srcStride]);
        uint32_t *s2 = (uint32_t *)(&src[(i * 15 + 2) * srcStride]);
        uint32_t *s3 = (uint32_t *)(&src[(i * 15 + 3) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 1) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a1; // Input data row 1
            uint32_t a2; // Input data row 2
            uint32_t a3; // Input data row 3

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u =      // Output pixel pair 0  -----------------------
                 8 * ((a1 >> 0) & 0xff) +  7 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) + 56 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) + 42 * ((a3 >> 16) & 0xff) ;
            v =
                 8 * ((a1 >> 8) & 0xff) +  7 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) + 56 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) + 42 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           1 * ((a1 >> 16) & 0xff) +
                                           8 * ((a2 >> 16) & 0xff) +
                                           6 * ((a3 >> 16) & 0xff) ;
            v =
                                           1 * ((a1 >> 24) & 0xff) +
                                           8 * ((a2 >> 24) & 0xff) +
                                           6 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 1
                 8 * ((a1 >> 0) & 0xff) +  6 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) + 48 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) + 36 * ((a3 >> 16) & 0xff) ;
            v = v +
                 8 * ((a1 >> 8) & 0xff) +  6 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) + 48 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) + 36 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                           2 * ((a1 >> 16) & 0xff) +
                                          16 * ((a2 >> 16) & 0xff) +
                                          12 * ((a3 >> 16) & 0xff) ;
            v =
                                           2 * ((a1 >> 24) & 0xff) +
                                          16 * ((a2 >> 24) & 0xff) +
                                          12 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 2
                 8 * ((a1 >> 0) & 0xff) +  5 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) + 40 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) + 30 * ((a3 >> 16) & 0xff) ;
            v = v +
                 8 * ((a1 >> 8) & 0xff) +  5 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) + 40 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) + 30 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                           3 * ((a1 >> 16) & 0xff) +
                                          24 * ((a2 >> 16) & 0xff) +
                                          18 * ((a3 >> 16) & 0xff) ;
            v =
                                           3 * ((a1 >> 24) & 0xff) +
                                          24 * ((a2 >> 24) & 0xff) +
                                          18 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 3
                 8 * ((a1 >> 0) & 0xff) +  4 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) + 32 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) + 24 * ((a3 >> 16) & 0xff) ;
            v = v +
                 8 * ((a1 >> 8) & 0xff) +  4 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) + 32 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) + 24 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                           4 * ((a1 >> 16) & 0xff) +
                                          32 * ((a2 >> 16) & 0xff) +
                                          24 * ((a3 >> 16) & 0xff) ;
            v =
                                           4 * ((a1 >> 24) & 0xff) +
                                          32 * ((a2 >> 24) & 0xff) +
                                          24 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 4
                 8 * ((a1 >> 0) & 0xff) +  3 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) + 24 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) + 18 * ((a3 >> 16) & 0xff) ;
            v = v +
                 8 * ((a1 >> 8) & 0xff) +  3 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) + 24 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) + 18 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                           5 * ((a1 >> 16) & 0xff) +
                                          40 * ((a2 >> 16) & 0xff) +
                                          30 * ((a3 >> 16) & 0xff) ;
            v =
                                           5 * ((a1 >> 24) & 0xff) +
                                          40 * ((a2 >> 24) & 0xff) +
                                          30 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 5
                 8 * ((a1 >> 0) & 0xff) +  2 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) + 16 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) + 12 * ((a3 >> 16) & 0xff) ;
            v = v +
                 8 * ((a1 >> 8) & 0xff) +  2 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) + 16 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) + 12 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                           6 * ((a1 >> 16) & 0xff) +
                                          48 * ((a2 >> 16) & 0xff) +
                                          36 * ((a3 >> 16) & 0xff) ;
            v =
                                           6 * ((a1 >> 24) & 0xff) +
                                          48 * ((a2 >> 24) & 0xff) +
                                          36 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 6
                 8 * ((a1 >> 0) & 0xff) +  1 * ((a1 >> 16) & 0xff) +
                64 * ((a2 >> 0) & 0xff) +  8 * ((a2 >> 16) & 0xff) +
                48 * ((a3 >> 0) & 0xff) +  6 * ((a3 >> 16) & 0xff) ;
            v = v +
                 8 * ((a1 >> 8) & 0xff) +  1 * ((a1 >> 24) & 0xff) +
                64 * ((a2 >> 8) & 0xff) +  8 * ((a2 >> 24) & 0xff) +
                48 * ((a3 >> 8) & 0xff) +  6 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                           7 * ((a1 >> 16) & 0xff) +
                                          56 * ((a2 >> 16) & 0xff) +
                                          42 * ((a3 >> 16) & 0xff) ;
            v =
                                           7 * ((a1 >> 24) & 0xff) +
                                          56 * ((a2 >> 24) & 0xff) +
                                          42 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 7
                 8 * ((a1 >> 0) & 0xff)                            +
                64 * ((a2 >> 0) & 0xff)                            +
                48 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 8 * ((a1 >> 8) & 0xff)                            +
                64 * ((a2 >> 8) & 0xff)                            +
                48 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                           8 * ((a1 >> 16) & 0xff) +
                                          64 * ((a2 >> 16) & 0xff) +
                                          48 * ((a3 >> 16) & 0xff) ;
            v =
                                           8 * ((a1 >> 24) & 0xff) +
                                          64 * ((a2 >> 24) & 0xff) +
                                          48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 8
                 7 * ((a1 >> 0) & 0xff)                            +
                56 * ((a2 >> 0) & 0xff)                            +
                42 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 7 * ((a1 >> 8) & 0xff)                            +
                56 * ((a2 >> 8) & 0xff)                            +
                42 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 1 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                 8 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                 6 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 1 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                 8 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                 6 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 9
                 6 * ((a1 >> 0) & 0xff)                            +
                48 * ((a2 >> 0) & 0xff)                            +
                36 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 6 * ((a1 >> 8) & 0xff)                            +
                48 * ((a2 >> 8) & 0xff)                            +
                36 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                 2 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                16 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                12 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 2 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                16 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                12 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 10
                 5 * ((a1 >> 0) & 0xff)                            +
                40 * ((a2 >> 0) & 0xff)                            +
                30 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 5 * ((a1 >> 8) & 0xff)                            +
                40 * ((a2 >> 8) & 0xff)                            +
                30 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                 3 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                24 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                18 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 3 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                24 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                18 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 11
                 4 * ((a1 >> 0) & 0xff)                            +
                32 * ((a2 >> 0) & 0xff)                            +
                24 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 4 * ((a1 >> 8) & 0xff)                            +
                32 * ((a2 >> 8) & 0xff)                            +
                24 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                 4 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                32 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                24 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 4 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                32 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                24 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 12
                 3 * ((a1 >> 0) & 0xff)                            +
                24 * ((a2 >> 0) & 0xff)                            +
                18 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 3 * ((a1 >> 8) & 0xff)                            +
                24 * ((a2 >> 8) & 0xff)                            +
                18 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                 5 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                40 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                30 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 5 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                40 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                30 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 13
                 2 * ((a1 >> 0) & 0xff)                            +
                16 * ((a2 >> 0) & 0xff)                            +
                12 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 2 * ((a1 >> 8) & 0xff)                            +
                16 * ((a2 >> 8) & 0xff)                            +
                12 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                 6 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                48 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                36 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 6 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                48 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                36 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;

            a1 = *s1++;
            a2 = *s2++;
            a3 = *s3++;

            u = u +  // Output pixel pair 14
                 1 * ((a1 >> 0) & 0xff)                            +
                 8 * ((a2 >> 0) & 0xff)                            +
                 6 * ((a3 >> 0) & 0xff)                            ;
            v = v +
                 1 * ((a1 >> 8) & 0xff)                            +
                 8 * ((a2 >> 8) & 0xff)                            +
                 6 * ((a3 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                 7 * ((a1 >> 0) & 0xff) +  8 * ((a1 >> 16) & 0xff) +
                56 * ((a2 >> 0) & 0xff) + 64 * ((a2 >> 16) & 0xff) +
                42 * ((a3 >> 0) & 0xff) + 48 * ((a3 >> 16) & 0xff) ;
            v =
                 7 * ((a1 >> 8) & 0xff) +  8 * ((a1 >> 24) & 0xff) +
                56 * ((a2 >> 8) & 0xff) + 64 * ((a2 >> 24) & 0xff) +
                42 * ((a3 >> 8) & 0xff) + 48 * ((a3 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s3 = (uint32_t *)(&src[(i * 15 + 3) * srcStride]);
        uint32_t *s4 = (uint32_t *)(&src[(i * 15 + 4) * srcStride]);
        uint32_t *s5 = (uint32_t *)(&src[(i * 15 + 5) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 2) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a3; // Input data row 3
            uint32_t a4; // Input data row 4
            uint32_t a5; // Input data row 5

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u =      // Output pixel pair 0  -----------------------
                16 * ((a3 >> 0) & 0xff) + 14 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) + 56 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) + 35 * ((a5 >> 16) & 0xff) ;
            v =
                16 * ((a3 >> 8) & 0xff) + 14 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) + 56 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) + 35 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           2 * ((a3 >> 16) & 0xff) +
                                           8 * ((a4 >> 16) & 0xff) +
                                           5 * ((a5 >> 16) & 0xff) ;
            v =
                                           2 * ((a3 >> 24) & 0xff) +
                                           8 * ((a4 >> 24) & 0xff) +
                                           5 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 1
                16 * ((a3 >> 0) & 0xff) + 12 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) + 48 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) + 30 * ((a5 >> 16) & 0xff) ;
            v = v +
                16 * ((a3 >> 8) & 0xff) + 12 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) + 48 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) + 30 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                           4 * ((a3 >> 16) & 0xff) +
                                          16 * ((a4 >> 16) & 0xff) +
                                          10 * ((a5 >> 16) & 0xff) ;
            v =
                                           4 * ((a3 >> 24) & 0xff) +
                                          16 * ((a4 >> 24) & 0xff) +
                                          10 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 2
                16 * ((a3 >> 0) & 0xff) + 10 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) + 40 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) + 25 * ((a5 >> 16) & 0xff) ;
            v = v +
                16 * ((a3 >> 8) & 0xff) + 10 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) + 40 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) + 25 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                           6 * ((a3 >> 16) & 0xff) +
                                          24 * ((a4 >> 16) & 0xff) +
                                          15 * ((a5 >> 16) & 0xff) ;
            v =
                                           6 * ((a3 >> 24) & 0xff) +
                                          24 * ((a4 >> 24) & 0xff) +
                                          15 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 3
                16 * ((a3 >> 0) & 0xff) +  8 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) + 32 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) + 20 * ((a5 >> 16) & 0xff) ;
            v = v +
                16 * ((a3 >> 8) & 0xff) +  8 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) + 32 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) + 20 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                           8 * ((a3 >> 16) & 0xff) +
                                          32 * ((a4 >> 16) & 0xff) +
                                          20 * ((a5 >> 16) & 0xff) ;
            v =
                                           8 * ((a3 >> 24) & 0xff) +
                                          32 * ((a4 >> 24) & 0xff) +
                                          20 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 4
                16 * ((a3 >> 0) & 0xff) +  6 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) + 24 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) + 15 * ((a5 >> 16) & 0xff) ;
            v = v +
                16 * ((a3 >> 8) & 0xff) +  6 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) + 24 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) + 15 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          10 * ((a3 >> 16) & 0xff) +
                                          40 * ((a4 >> 16) & 0xff) +
                                          25 * ((a5 >> 16) & 0xff) ;
            v =
                                          10 * ((a3 >> 24) & 0xff) +
                                          40 * ((a4 >> 24) & 0xff) +
                                          25 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 5
                16 * ((a3 >> 0) & 0xff) +  4 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) + 16 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) + 10 * ((a5 >> 16) & 0xff) ;
            v = v +
                16 * ((a3 >> 8) & 0xff) +  4 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) + 16 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) + 10 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          12 * ((a3 >> 16) & 0xff) +
                                          48 * ((a4 >> 16) & 0xff) +
                                          30 * ((a5 >> 16) & 0xff) ;
            v =
                                          12 * ((a3 >> 24) & 0xff) +
                                          48 * ((a4 >> 24) & 0xff) +
                                          30 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 6
                16 * ((a3 >> 0) & 0xff) +  2 * ((a3 >> 16) & 0xff) +
                64 * ((a4 >> 0) & 0xff) +  8 * ((a4 >> 16) & 0xff) +
                40 * ((a5 >> 0) & 0xff) +  5 * ((a5 >> 16) & 0xff) ;
            v = v +
                16 * ((a3 >> 8) & 0xff) +  2 * ((a3 >> 24) & 0xff) +
                64 * ((a4 >> 8) & 0xff) +  8 * ((a4 >> 24) & 0xff) +
                40 * ((a5 >> 8) & 0xff) +  5 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          14 * ((a3 >> 16) & 0xff) +
                                          56 * ((a4 >> 16) & 0xff) +
                                          35 * ((a5 >> 16) & 0xff) ;
            v =
                                          14 * ((a3 >> 24) & 0xff) +
                                          56 * ((a4 >> 24) & 0xff) +
                                          35 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 7
                16 * ((a3 >> 0) & 0xff)                            +
                64 * ((a4 >> 0) & 0xff)                            +
                40 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                16 * ((a3 >> 8) & 0xff)                            +
                64 * ((a4 >> 8) & 0xff)                            +
                40 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          16 * ((a3 >> 16) & 0xff) +
                                          64 * ((a4 >> 16) & 0xff) +
                                          40 * ((a5 >> 16) & 0xff) ;
            v =
                                          16 * ((a3 >> 24) & 0xff) +
                                          64 * ((a4 >> 24) & 0xff) +
                                          40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 8
                14 * ((a3 >> 0) & 0xff)                            +
                56 * ((a4 >> 0) & 0xff)                            +
                35 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                14 * ((a3 >> 8) & 0xff)                            +
                56 * ((a4 >> 8) & 0xff)                            +
                35 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 2 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                 8 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                 5 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                 2 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                 8 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                 5 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 9
                12 * ((a3 >> 0) & 0xff)                            +
                48 * ((a4 >> 0) & 0xff)                            +
                30 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                12 * ((a3 >> 8) & 0xff)                            +
                48 * ((a4 >> 8) & 0xff)                            +
                30 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                 4 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                16 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                10 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                 4 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                16 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                10 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 10
                10 * ((a3 >> 0) & 0xff)                            +
                40 * ((a4 >> 0) & 0xff)                            +
                25 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                10 * ((a3 >> 8) & 0xff)                            +
                40 * ((a4 >> 8) & 0xff)                            +
                25 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                 6 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                24 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                15 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                 6 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                24 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                15 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 11
                 8 * ((a3 >> 0) & 0xff)                            +
                32 * ((a4 >> 0) & 0xff)                            +
                20 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                 8 * ((a3 >> 8) & 0xff)                            +
                32 * ((a4 >> 8) & 0xff)                            +
                20 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                 8 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                32 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                20 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                 8 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                32 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                20 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 12
                 6 * ((a3 >> 0) & 0xff)                            +
                24 * ((a4 >> 0) & 0xff)                            +
                15 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                 6 * ((a3 >> 8) & 0xff)                            +
                24 * ((a4 >> 8) & 0xff)                            +
                15 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                10 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                40 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                25 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                10 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                40 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                25 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 13
                 4 * ((a3 >> 0) & 0xff)                            +
                16 * ((a4 >> 0) & 0xff)                            +
                10 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                 4 * ((a3 >> 8) & 0xff)                            +
                16 * ((a4 >> 8) & 0xff)                            +
                10 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                12 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                48 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                30 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                12 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                48 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                30 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;

            a3 = *s3++;
            a4 = *s4++;
            a5 = *s5++;

            u = u +  // Output pixel pair 14
                 2 * ((a3 >> 0) & 0xff)                            +
                 8 * ((a4 >> 0) & 0xff)                            +
                 5 * ((a5 >> 0) & 0xff)                            ;
            v = v +
                 2 * ((a3 >> 8) & 0xff)                            +
                 8 * ((a4 >> 8) & 0xff)                            +
                 5 * ((a5 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                14 * ((a3 >> 0) & 0xff) + 16 * ((a3 >> 16) & 0xff) +
                56 * ((a4 >> 0) & 0xff) + 64 * ((a4 >> 16) & 0xff) +
                35 * ((a5 >> 0) & 0xff) + 40 * ((a5 >> 16) & 0xff) ;
            v =
                14 * ((a3 >> 8) & 0xff) + 16 * ((a3 >> 24) & 0xff) +
                56 * ((a4 >> 8) & 0xff) + 64 * ((a4 >> 24) & 0xff) +
                35 * ((a5 >> 8) & 0xff) + 40 * ((a5 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s5 = (uint32_t *)(&src[(i * 15 + 5) * srcStride]);
        uint32_t *s6 = (uint32_t *)(&src[(i * 15 + 6) * srcStride]);
        uint32_t *s7 = (uint32_t *)(&src[(i * 15 + 7) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 3) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a5; // Input data row 5
            uint32_t a6; // Input data row 6
            uint32_t a7; // Input data row 7

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u =      // Output pixel pair 0  -----------------------
                24 * ((a5 >> 0) & 0xff) + 21 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) + 56 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) + 28 * ((a7 >> 16) & 0xff) ;
            v =
                24 * ((a5 >> 8) & 0xff) + 21 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) + 56 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) + 28 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           3 * ((a5 >> 16) & 0xff) +
                                           8 * ((a6 >> 16) & 0xff) +
                                           4 * ((a7 >> 16) & 0xff) ;
            v =
                                           3 * ((a5 >> 24) & 0xff) +
                                           8 * ((a6 >> 24) & 0xff) +
                                           4 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 1
                24 * ((a5 >> 0) & 0xff) + 18 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) + 48 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) + 24 * ((a7 >> 16) & 0xff) ;
            v = v +
                24 * ((a5 >> 8) & 0xff) + 18 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) + 48 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) + 24 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                           6 * ((a5 >> 16) & 0xff) +
                                          16 * ((a6 >> 16) & 0xff) +
                                           8 * ((a7 >> 16) & 0xff) ;
            v =
                                           6 * ((a5 >> 24) & 0xff) +
                                          16 * ((a6 >> 24) & 0xff) +
                                           8 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 2
                24 * ((a5 >> 0) & 0xff) + 15 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) + 40 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) + 20 * ((a7 >> 16) & 0xff) ;
            v = v +
                24 * ((a5 >> 8) & 0xff) + 15 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) + 40 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) + 20 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                           9 * ((a5 >> 16) & 0xff) +
                                          24 * ((a6 >> 16) & 0xff) +
                                          12 * ((a7 >> 16) & 0xff) ;
            v =
                                           9 * ((a5 >> 24) & 0xff) +
                                          24 * ((a6 >> 24) & 0xff) +
                                          12 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 3
                24 * ((a5 >> 0) & 0xff) + 12 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) + 32 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) + 16 * ((a7 >> 16) & 0xff) ;
            v = v +
                24 * ((a5 >> 8) & 0xff) + 12 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) + 32 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) + 16 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                          12 * ((a5 >> 16) & 0xff) +
                                          32 * ((a6 >> 16) & 0xff) +
                                          16 * ((a7 >> 16) & 0xff) ;
            v =
                                          12 * ((a5 >> 24) & 0xff) +
                                          32 * ((a6 >> 24) & 0xff) +
                                          16 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 4
                24 * ((a5 >> 0) & 0xff) +  9 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) + 24 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) + 12 * ((a7 >> 16) & 0xff) ;
            v = v +
                24 * ((a5 >> 8) & 0xff) +  9 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) + 24 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) + 12 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          15 * ((a5 >> 16) & 0xff) +
                                          40 * ((a6 >> 16) & 0xff) +
                                          20 * ((a7 >> 16) & 0xff) ;
            v =
                                          15 * ((a5 >> 24) & 0xff) +
                                          40 * ((a6 >> 24) & 0xff) +
                                          20 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 5
                24 * ((a5 >> 0) & 0xff) +  6 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) + 16 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) +  8 * ((a7 >> 16) & 0xff) ;
            v = v +
                24 * ((a5 >> 8) & 0xff) +  6 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) + 16 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) +  8 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          18 * ((a5 >> 16) & 0xff) +
                                          48 * ((a6 >> 16) & 0xff) +
                                          24 * ((a7 >> 16) & 0xff) ;
            v =
                                          18 * ((a5 >> 24) & 0xff) +
                                          48 * ((a6 >> 24) & 0xff) +
                                          24 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 6
                24 * ((a5 >> 0) & 0xff) +  3 * ((a5 >> 16) & 0xff) +
                64 * ((a6 >> 0) & 0xff) +  8 * ((a6 >> 16) & 0xff) +
                32 * ((a7 >> 0) & 0xff) +  4 * ((a7 >> 16) & 0xff) ;
            v = v +
                24 * ((a5 >> 8) & 0xff) +  3 * ((a5 >> 24) & 0xff) +
                64 * ((a6 >> 8) & 0xff) +  8 * ((a6 >> 24) & 0xff) +
                32 * ((a7 >> 8) & 0xff) +  4 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          21 * ((a5 >> 16) & 0xff) +
                                          56 * ((a6 >> 16) & 0xff) +
                                          28 * ((a7 >> 16) & 0xff) ;
            v =
                                          21 * ((a5 >> 24) & 0xff) +
                                          56 * ((a6 >> 24) & 0xff) +
                                          28 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 7
                24 * ((a5 >> 0) & 0xff)                            +
                64 * ((a6 >> 0) & 0xff)                            +
                32 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                24 * ((a5 >> 8) & 0xff)                            +
                64 * ((a6 >> 8) & 0xff)                            +
                32 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          24 * ((a5 >> 16) & 0xff) +
                                          64 * ((a6 >> 16) & 0xff) +
                                          32 * ((a7 >> 16) & 0xff) ;
            v =
                                          24 * ((a5 >> 24) & 0xff) +
                                          64 * ((a6 >> 24) & 0xff) +
                                          32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 8
                21 * ((a5 >> 0) & 0xff)                            +
                56 * ((a6 >> 0) & 0xff)                            +
                28 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                21 * ((a5 >> 8) & 0xff)                            +
                56 * ((a6 >> 8) & 0xff)                            +
                28 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 3 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                 8 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                 4 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                 3 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                 8 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                 4 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 9
                18 * ((a5 >> 0) & 0xff)                            +
                48 * ((a6 >> 0) & 0xff)                            +
                24 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                18 * ((a5 >> 8) & 0xff)                            +
                48 * ((a6 >> 8) & 0xff)                            +
                24 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                 6 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                16 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                 8 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                 6 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                16 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                 8 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 10
                15 * ((a5 >> 0) & 0xff)                            +
                40 * ((a6 >> 0) & 0xff)                            +
                20 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                15 * ((a5 >> 8) & 0xff)                            +
                40 * ((a6 >> 8) & 0xff)                            +
                20 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                 9 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                24 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                12 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                 9 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                24 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                12 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 11
                12 * ((a5 >> 0) & 0xff)                            +
                32 * ((a6 >> 0) & 0xff)                            +
                16 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                12 * ((a5 >> 8) & 0xff)                            +
                32 * ((a6 >> 8) & 0xff)                            +
                16 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                12 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                32 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                16 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                12 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                32 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                16 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 12
                 9 * ((a5 >> 0) & 0xff)                            +
                24 * ((a6 >> 0) & 0xff)                            +
                12 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                 9 * ((a5 >> 8) & 0xff)                            +
                24 * ((a6 >> 8) & 0xff)                            +
                12 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                15 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                40 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                20 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                15 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                40 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                20 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 13
                 6 * ((a5 >> 0) & 0xff)                            +
                16 * ((a6 >> 0) & 0xff)                            +
                 8 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                 6 * ((a5 >> 8) & 0xff)                            +
                16 * ((a6 >> 8) & 0xff)                            +
                 8 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                18 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                48 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                24 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                18 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                48 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                24 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;

            a5 = *s5++;
            a6 = *s6++;
            a7 = *s7++;

            u = u +  // Output pixel pair 14
                 3 * ((a5 >> 0) & 0xff)                            +
                 8 * ((a6 >> 0) & 0xff)                            +
                 4 * ((a7 >> 0) & 0xff)                            ;
            v = v +
                 3 * ((a5 >> 8) & 0xff)                            +
                 8 * ((a6 >> 8) & 0xff)                            +
                 4 * ((a7 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                21 * ((a5 >> 0) & 0xff) + 24 * ((a5 >> 16) & 0xff) +
                56 * ((a6 >> 0) & 0xff) + 64 * ((a6 >> 16) & 0xff) +
                28 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) ;
            v =
                21 * ((a5 >> 8) & 0xff) + 24 * ((a5 >> 24) & 0xff) +
                56 * ((a6 >> 8) & 0xff) + 64 * ((a6 >> 24) & 0xff) +
                28 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s7 = (uint32_t *)(&src[(i * 15 + 7) * srcStride]);
        uint32_t *s8 = (uint32_t *)(&src[(i * 15 + 8) * srcStride]);
        uint32_t *s9 = (uint32_t *)(&src[(i * 15 + 9) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 4) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a7; // Input data row 7
            uint32_t a8; // Input data row 8
            uint32_t a9; // Input data row 9

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u =      // Output pixel pair 0  -----------------------
                32 * ((a7 >> 0) & 0xff) + 28 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) + 56 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) + 21 * ((a9 >> 16) & 0xff) ;
            v =
                32 * ((a7 >> 8) & 0xff) + 28 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) + 56 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) + 21 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           4 * ((a7 >> 16) & 0xff) +
                                           8 * ((a8 >> 16) & 0xff) +
                                           3 * ((a9 >> 16) & 0xff) ;
            v =
                                           4 * ((a7 >> 24) & 0xff) +
                                           8 * ((a8 >> 24) & 0xff) +
                                           3 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 1
                32 * ((a7 >> 0) & 0xff) + 24 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) + 48 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) + 18 * ((a9 >> 16) & 0xff) ;
            v = v +
                32 * ((a7 >> 8) & 0xff) + 24 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) + 48 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) + 18 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                           8 * ((a7 >> 16) & 0xff) +
                                          16 * ((a8 >> 16) & 0xff) +
                                           6 * ((a9 >> 16) & 0xff) ;
            v =
                                           8 * ((a7 >> 24) & 0xff) +
                                          16 * ((a8 >> 24) & 0xff) +
                                           6 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 2
                32 * ((a7 >> 0) & 0xff) + 20 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) + 40 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) + 15 * ((a9 >> 16) & 0xff) ;
            v = v +
                32 * ((a7 >> 8) & 0xff) + 20 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) + 40 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) + 15 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                          12 * ((a7 >> 16) & 0xff) +
                                          24 * ((a8 >> 16) & 0xff) +
                                           9 * ((a9 >> 16) & 0xff) ;
            v =
                                          12 * ((a7 >> 24) & 0xff) +
                                          24 * ((a8 >> 24) & 0xff) +
                                           9 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 3
                32 * ((a7 >> 0) & 0xff) + 16 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) + 32 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) + 12 * ((a9 >> 16) & 0xff) ;
            v = v +
                32 * ((a7 >> 8) & 0xff) + 16 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) + 32 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) + 12 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                          16 * ((a7 >> 16) & 0xff) +
                                          32 * ((a8 >> 16) & 0xff) +
                                          12 * ((a9 >> 16) & 0xff) ;
            v =
                                          16 * ((a7 >> 24) & 0xff) +
                                          32 * ((a8 >> 24) & 0xff) +
                                          12 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 4
                32 * ((a7 >> 0) & 0xff) + 12 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) + 24 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) +  9 * ((a9 >> 16) & 0xff) ;
            v = v +
                32 * ((a7 >> 8) & 0xff) + 12 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) + 24 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) +  9 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          20 * ((a7 >> 16) & 0xff) +
                                          40 * ((a8 >> 16) & 0xff) +
                                          15 * ((a9 >> 16) & 0xff) ;
            v =
                                          20 * ((a7 >> 24) & 0xff) +
                                          40 * ((a8 >> 24) & 0xff) +
                                          15 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 5
                32 * ((a7 >> 0) & 0xff) +  8 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) + 16 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) +  6 * ((a9 >> 16) & 0xff) ;
            v = v +
                32 * ((a7 >> 8) & 0xff) +  8 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) + 16 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) +  6 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          24 * ((a7 >> 16) & 0xff) +
                                          48 * ((a8 >> 16) & 0xff) +
                                          18 * ((a9 >> 16) & 0xff) ;
            v =
                                          24 * ((a7 >> 24) & 0xff) +
                                          48 * ((a8 >> 24) & 0xff) +
                                          18 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 6
                32 * ((a7 >> 0) & 0xff) +  4 * ((a7 >> 16) & 0xff) +
                64 * ((a8 >> 0) & 0xff) +  8 * ((a8 >> 16) & 0xff) +
                24 * ((a9 >> 0) & 0xff) +  3 * ((a9 >> 16) & 0xff) ;
            v = v +
                32 * ((a7 >> 8) & 0xff) +  4 * ((a7 >> 24) & 0xff) +
                64 * ((a8 >> 8) & 0xff) +  8 * ((a8 >> 24) & 0xff) +
                24 * ((a9 >> 8) & 0xff) +  3 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          28 * ((a7 >> 16) & 0xff) +
                                          56 * ((a8 >> 16) & 0xff) +
                                          21 * ((a9 >> 16) & 0xff) ;
            v =
                                          28 * ((a7 >> 24) & 0xff) +
                                          56 * ((a8 >> 24) & 0xff) +
                                          21 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 7
                32 * ((a7 >> 0) & 0xff)                            +
                64 * ((a8 >> 0) & 0xff)                            +
                24 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                32 * ((a7 >> 8) & 0xff)                            +
                64 * ((a8 >> 8) & 0xff)                            +
                24 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          32 * ((a7 >> 16) & 0xff) +
                                          64 * ((a8 >> 16) & 0xff) +
                                          24 * ((a9 >> 16) & 0xff) ;
            v =
                                          32 * ((a7 >> 24) & 0xff) +
                                          64 * ((a8 >> 24) & 0xff) +
                                          24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 8
                28 * ((a7 >> 0) & 0xff)                            +
                56 * ((a8 >> 0) & 0xff)                            +
                21 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                28 * ((a7 >> 8) & 0xff)                            +
                56 * ((a8 >> 8) & 0xff)                            +
                21 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 4 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                 8 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                 3 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                 4 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                 8 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                 3 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 9
                24 * ((a7 >> 0) & 0xff)                            +
                48 * ((a8 >> 0) & 0xff)                            +
                18 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                24 * ((a7 >> 8) & 0xff)                            +
                48 * ((a8 >> 8) & 0xff)                            +
                18 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                 8 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                16 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                 6 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                 8 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                16 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                 6 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 10
                20 * ((a7 >> 0) & 0xff)                            +
                40 * ((a8 >> 0) & 0xff)                            +
                15 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                20 * ((a7 >> 8) & 0xff)                            +
                40 * ((a8 >> 8) & 0xff)                            +
                15 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                12 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                24 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                 9 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                12 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                24 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                 9 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 11
                16 * ((a7 >> 0) & 0xff)                            +
                32 * ((a8 >> 0) & 0xff)                            +
                12 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                16 * ((a7 >> 8) & 0xff)                            +
                32 * ((a8 >> 8) & 0xff)                            +
                12 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                16 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                32 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                12 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                16 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                32 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                12 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 12
                12 * ((a7 >> 0) & 0xff)                            +
                24 * ((a8 >> 0) & 0xff)                            +
                 9 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                12 * ((a7 >> 8) & 0xff)                            +
                24 * ((a8 >> 8) & 0xff)                            +
                 9 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                20 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                40 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                15 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                20 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                40 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                15 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 13
                 8 * ((a7 >> 0) & 0xff)                            +
                16 * ((a8 >> 0) & 0xff)                            +
                 6 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                 8 * ((a7 >> 8) & 0xff)                            +
                16 * ((a8 >> 8) & 0xff)                            +
                 6 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                24 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                48 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                18 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                24 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                48 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                18 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;

            a7 = *s7++;
            a8 = *s8++;
            a9 = *s9++;

            u = u +  // Output pixel pair 14
                 4 * ((a7 >> 0) & 0xff)                            +
                 8 * ((a8 >> 0) & 0xff)                            +
                 3 * ((a9 >> 0) & 0xff)                            ;
            v = v +
                 4 * ((a7 >> 8) & 0xff)                            +
                 8 * ((a8 >> 8) & 0xff)                            +
                 3 * ((a9 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                28 * ((a7 >> 0) & 0xff) + 32 * ((a7 >> 16) & 0xff) +
                56 * ((a8 >> 0) & 0xff) + 64 * ((a8 >> 16) & 0xff) +
                21 * ((a9 >> 0) & 0xff) + 24 * ((a9 >> 16) & 0xff) ;
            v =
                28 * ((a7 >> 8) & 0xff) + 32 * ((a7 >> 24) & 0xff) +
                56 * ((a8 >> 8) & 0xff) + 64 * ((a8 >> 24) & 0xff) +
                21 * ((a9 >> 8) & 0xff) + 24 * ((a9 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s9 = (uint32_t *)(&src[(i * 15 + 9) * srcStride]);
        uint32_t *s10 = (uint32_t *)(&src[(i * 15 + 10) * srcStride]);
        uint32_t *s11 = (uint32_t *)(&src[(i * 15 + 11) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 5) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a9; // Input data row 9
            uint32_t a10; // Input data row 10
            uint32_t a11; // Input data row 11

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u =      // Output pixel pair 0  -----------------------
                40 * ((a9 >> 0) & 0xff) + 35 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) + 56 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) + 14 * ((a11 >> 16) & 0xff) ;
            v =
                40 * ((a9 >> 8) & 0xff) + 35 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) + 56 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) + 14 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           5 * ((a9 >> 16) & 0xff) +
                                           8 * ((a10 >> 16) & 0xff) +
                                           2 * ((a11 >> 16) & 0xff) ;
            v =
                                           5 * ((a9 >> 24) & 0xff) +
                                           8 * ((a10 >> 24) & 0xff) +
                                           2 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 1
                40 * ((a9 >> 0) & 0xff) + 30 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) + 48 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) + 12 * ((a11 >> 16) & 0xff) ;
            v = v +
                40 * ((a9 >> 8) & 0xff) + 30 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) + 48 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) + 12 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                          10 * ((a9 >> 16) & 0xff) +
                                          16 * ((a10 >> 16) & 0xff) +
                                           4 * ((a11 >> 16) & 0xff) ;
            v =
                                          10 * ((a9 >> 24) & 0xff) +
                                          16 * ((a10 >> 24) & 0xff) +
                                           4 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 2
                40 * ((a9 >> 0) & 0xff) + 25 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) + 40 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) + 10 * ((a11 >> 16) & 0xff) ;
            v = v +
                40 * ((a9 >> 8) & 0xff) + 25 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) + 40 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) + 10 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                          15 * ((a9 >> 16) & 0xff) +
                                          24 * ((a10 >> 16) & 0xff) +
                                           6 * ((a11 >> 16) & 0xff) ;
            v =
                                          15 * ((a9 >> 24) & 0xff) +
                                          24 * ((a10 >> 24) & 0xff) +
                                           6 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 3
                40 * ((a9 >> 0) & 0xff) + 20 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) + 32 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) +  8 * ((a11 >> 16) & 0xff) ;
            v = v +
                40 * ((a9 >> 8) & 0xff) + 20 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) + 32 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) +  8 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                          20 * ((a9 >> 16) & 0xff) +
                                          32 * ((a10 >> 16) & 0xff) +
                                           8 * ((a11 >> 16) & 0xff) ;
            v =
                                          20 * ((a9 >> 24) & 0xff) +
                                          32 * ((a10 >> 24) & 0xff) +
                                           8 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 4
                40 * ((a9 >> 0) & 0xff) + 15 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) + 24 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) +  6 * ((a11 >> 16) & 0xff) ;
            v = v +
                40 * ((a9 >> 8) & 0xff) + 15 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) + 24 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) +  6 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          25 * ((a9 >> 16) & 0xff) +
                                          40 * ((a10 >> 16) & 0xff) +
                                          10 * ((a11 >> 16) & 0xff) ;
            v =
                                          25 * ((a9 >> 24) & 0xff) +
                                          40 * ((a10 >> 24) & 0xff) +
                                          10 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 5
                40 * ((a9 >> 0) & 0xff) + 10 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) + 16 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) +  4 * ((a11 >> 16) & 0xff) ;
            v = v +
                40 * ((a9 >> 8) & 0xff) + 10 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) + 16 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) +  4 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          30 * ((a9 >> 16) & 0xff) +
                                          48 * ((a10 >> 16) & 0xff) +
                                          12 * ((a11 >> 16) & 0xff) ;
            v =
                                          30 * ((a9 >> 24) & 0xff) +
                                          48 * ((a10 >> 24) & 0xff) +
                                          12 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 6
                40 * ((a9 >> 0) & 0xff) +  5 * ((a9 >> 16) & 0xff) +
                64 * ((a10 >> 0) & 0xff) +  8 * ((a10 >> 16) & 0xff) +
                16 * ((a11 >> 0) & 0xff) +  2 * ((a11 >> 16) & 0xff) ;
            v = v +
                40 * ((a9 >> 8) & 0xff) +  5 * ((a9 >> 24) & 0xff) +
                64 * ((a10 >> 8) & 0xff) +  8 * ((a10 >> 24) & 0xff) +
                16 * ((a11 >> 8) & 0xff) +  2 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          35 * ((a9 >> 16) & 0xff) +
                                          56 * ((a10 >> 16) & 0xff) +
                                          14 * ((a11 >> 16) & 0xff) ;
            v =
                                          35 * ((a9 >> 24) & 0xff) +
                                          56 * ((a10 >> 24) & 0xff) +
                                          14 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 7
                40 * ((a9 >> 0) & 0xff)                            +
                64 * ((a10 >> 0) & 0xff)                            +
                16 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                40 * ((a9 >> 8) & 0xff)                            +
                64 * ((a10 >> 8) & 0xff)                            +
                16 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          40 * ((a9 >> 16) & 0xff) +
                                          64 * ((a10 >> 16) & 0xff) +
                                          16 * ((a11 >> 16) & 0xff) ;
            v =
                                          40 * ((a9 >> 24) & 0xff) +
                                          64 * ((a10 >> 24) & 0xff) +
                                          16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 8
                35 * ((a9 >> 0) & 0xff)                            +
                56 * ((a10 >> 0) & 0xff)                            +
                14 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                35 * ((a9 >> 8) & 0xff)                            +
                56 * ((a10 >> 8) & 0xff)                            +
                14 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 5 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                 8 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                 2 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                 5 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                 8 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                 2 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 9
                30 * ((a9 >> 0) & 0xff)                            +
                48 * ((a10 >> 0) & 0xff)                            +
                12 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                30 * ((a9 >> 8) & 0xff)                            +
                48 * ((a10 >> 8) & 0xff)                            +
                12 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                10 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                16 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                 4 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                10 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                16 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                 4 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 10
                25 * ((a9 >> 0) & 0xff)                            +
                40 * ((a10 >> 0) & 0xff)                            +
                10 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                25 * ((a9 >> 8) & 0xff)                            +
                40 * ((a10 >> 8) & 0xff)                            +
                10 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                15 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                24 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                 6 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                15 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                24 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                 6 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 11
                20 * ((a9 >> 0) & 0xff)                            +
                32 * ((a10 >> 0) & 0xff)                            +
                 8 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                20 * ((a9 >> 8) & 0xff)                            +
                32 * ((a10 >> 8) & 0xff)                            +
                 8 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                20 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                32 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                 8 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                20 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                32 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                 8 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 12
                15 * ((a9 >> 0) & 0xff)                            +
                24 * ((a10 >> 0) & 0xff)                            +
                 6 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                15 * ((a9 >> 8) & 0xff)                            +
                24 * ((a10 >> 8) & 0xff)                            +
                 6 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                25 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                40 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                10 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                25 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                40 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                10 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 13
                10 * ((a9 >> 0) & 0xff)                            +
                16 * ((a10 >> 0) & 0xff)                            +
                 4 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                10 * ((a9 >> 8) & 0xff)                            +
                16 * ((a10 >> 8) & 0xff)                            +
                 4 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                30 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                48 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                12 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                30 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                48 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                12 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;

            a9 = *s9++;
            a10 = *s10++;
            a11 = *s11++;

            u = u +  // Output pixel pair 14
                 5 * ((a9 >> 0) & 0xff)                            +
                 8 * ((a10 >> 0) & 0xff)                            +
                 2 * ((a11 >> 0) & 0xff)                            ;
            v = v +
                 5 * ((a9 >> 8) & 0xff)                            +
                 8 * ((a10 >> 8) & 0xff)                            +
                 2 * ((a11 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                35 * ((a9 >> 0) & 0xff) + 40 * ((a9 >> 16) & 0xff) +
                56 * ((a10 >> 0) & 0xff) + 64 * ((a10 >> 16) & 0xff) +
                14 * ((a11 >> 0) & 0xff) + 16 * ((a11 >> 16) & 0xff) ;
            v =
                35 * ((a9 >> 8) & 0xff) + 40 * ((a9 >> 24) & 0xff) +
                56 * ((a10 >> 8) & 0xff) + 64 * ((a10 >> 24) & 0xff) +
                14 * ((a11 >> 8) & 0xff) + 16 * ((a11 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s11 = (uint32_t *)(&src[(i * 15 + 11) * srcStride]);
        uint32_t *s12 = (uint32_t *)(&src[(i * 15 + 12) * srcStride]);
        uint32_t *s13 = (uint32_t *)(&src[(i * 15 + 13) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 6) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a11; // Input data row 11
            uint32_t a12; // Input data row 12
            uint32_t a13; // Input data row 13

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u =      // Output pixel pair 0  -----------------------
                48 * ((a11 >> 0) & 0xff) + 42 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) + 56 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  7 * ((a13 >> 16) & 0xff) ;
            v =
                48 * ((a11 >> 8) & 0xff) + 42 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) + 56 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  7 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           6 * ((a11 >> 16) & 0xff) +
                                           8 * ((a12 >> 16) & 0xff) +
                                           1 * ((a13 >> 16) & 0xff) ;
            v =
                                           6 * ((a11 >> 24) & 0xff) +
                                           8 * ((a12 >> 24) & 0xff) +
                                           1 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 1
                48 * ((a11 >> 0) & 0xff) + 36 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) + 48 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  6 * ((a13 >> 16) & 0xff) ;
            v = v +
                48 * ((a11 >> 8) & 0xff) + 36 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) + 48 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  6 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                          12 * ((a11 >> 16) & 0xff) +
                                          16 * ((a12 >> 16) & 0xff) +
                                           2 * ((a13 >> 16) & 0xff) ;
            v =
                                          12 * ((a11 >> 24) & 0xff) +
                                          16 * ((a12 >> 24) & 0xff) +
                                           2 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 2
                48 * ((a11 >> 0) & 0xff) + 30 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) + 40 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  5 * ((a13 >> 16) & 0xff) ;
            v = v +
                48 * ((a11 >> 8) & 0xff) + 30 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) + 40 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  5 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                          18 * ((a11 >> 16) & 0xff) +
                                          24 * ((a12 >> 16) & 0xff) +
                                           3 * ((a13 >> 16) & 0xff) ;
            v =
                                          18 * ((a11 >> 24) & 0xff) +
                                          24 * ((a12 >> 24) & 0xff) +
                                           3 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 3
                48 * ((a11 >> 0) & 0xff) + 24 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) + 32 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  4 * ((a13 >> 16) & 0xff) ;
            v = v +
                48 * ((a11 >> 8) & 0xff) + 24 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) + 32 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  4 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                          24 * ((a11 >> 16) & 0xff) +
                                          32 * ((a12 >> 16) & 0xff) +
                                           4 * ((a13 >> 16) & 0xff) ;
            v =
                                          24 * ((a11 >> 24) & 0xff) +
                                          32 * ((a12 >> 24) & 0xff) +
                                           4 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 4
                48 * ((a11 >> 0) & 0xff) + 18 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) + 24 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  3 * ((a13 >> 16) & 0xff) ;
            v = v +
                48 * ((a11 >> 8) & 0xff) + 18 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) + 24 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  3 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          30 * ((a11 >> 16) & 0xff) +
                                          40 * ((a12 >> 16) & 0xff) +
                                           5 * ((a13 >> 16) & 0xff) ;
            v =
                                          30 * ((a11 >> 24) & 0xff) +
                                          40 * ((a12 >> 24) & 0xff) +
                                           5 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 5
                48 * ((a11 >> 0) & 0xff) + 12 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) + 16 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  2 * ((a13 >> 16) & 0xff) ;
            v = v +
                48 * ((a11 >> 8) & 0xff) + 12 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) + 16 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  2 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          36 * ((a11 >> 16) & 0xff) +
                                          48 * ((a12 >> 16) & 0xff) +
                                           6 * ((a13 >> 16) & 0xff) ;
            v =
                                          36 * ((a11 >> 24) & 0xff) +
                                          48 * ((a12 >> 24) & 0xff) +
                                           6 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 6
                48 * ((a11 >> 0) & 0xff) +  6 * ((a11 >> 16) & 0xff) +
                64 * ((a12 >> 0) & 0xff) +  8 * ((a12 >> 16) & 0xff) +
                 8 * ((a13 >> 0) & 0xff) +  1 * ((a13 >> 16) & 0xff) ;
            v = v +
                48 * ((a11 >> 8) & 0xff) +  6 * ((a11 >> 24) & 0xff) +
                64 * ((a12 >> 8) & 0xff) +  8 * ((a12 >> 24) & 0xff) +
                 8 * ((a13 >> 8) & 0xff) +  1 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          42 * ((a11 >> 16) & 0xff) +
                                          56 * ((a12 >> 16) & 0xff) +
                                           7 * ((a13 >> 16) & 0xff) ;
            v =
                                          42 * ((a11 >> 24) & 0xff) +
                                          56 * ((a12 >> 24) & 0xff) +
                                           7 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 7
                48 * ((a11 >> 0) & 0xff)                            +
                64 * ((a12 >> 0) & 0xff)                            +
                 8 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                48 * ((a11 >> 8) & 0xff)                            +
                64 * ((a12 >> 8) & 0xff)                            +
                 8 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          48 * ((a11 >> 16) & 0xff) +
                                          64 * ((a12 >> 16) & 0xff) +
                                           8 * ((a13 >> 16) & 0xff) ;
            v =
                                          48 * ((a11 >> 24) & 0xff) +
                                          64 * ((a12 >> 24) & 0xff) +
                                           8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 8
                42 * ((a11 >> 0) & 0xff)                            +
                56 * ((a12 >> 0) & 0xff)                            +
                 7 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                42 * ((a11 >> 8) & 0xff)                            +
                56 * ((a12 >> 8) & 0xff)                            +
                 7 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 6 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                 8 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 1 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                 6 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                 8 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 1 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 9
                36 * ((a11 >> 0) & 0xff)                            +
                48 * ((a12 >> 0) & 0xff)                            +
                 6 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                36 * ((a11 >> 8) & 0xff)                            +
                48 * ((a12 >> 8) & 0xff)                            +
                 6 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                12 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                16 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 2 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                12 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                16 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 2 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 10
                30 * ((a11 >> 0) & 0xff)                            +
                40 * ((a12 >> 0) & 0xff)                            +
                 5 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                30 * ((a11 >> 8) & 0xff)                            +
                40 * ((a12 >> 8) & 0xff)                            +
                 5 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                18 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                24 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 3 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                18 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                24 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 3 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 11
                24 * ((a11 >> 0) & 0xff)                            +
                32 * ((a12 >> 0) & 0xff)                            +
                 4 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                24 * ((a11 >> 8) & 0xff)                            +
                32 * ((a12 >> 8) & 0xff)                            +
                 4 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                24 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                32 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 4 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                24 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                32 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 4 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 12
                18 * ((a11 >> 0) & 0xff)                            +
                24 * ((a12 >> 0) & 0xff)                            +
                 3 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                18 * ((a11 >> 8) & 0xff)                            +
                24 * ((a12 >> 8) & 0xff)                            +
                 3 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                30 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                40 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 5 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                30 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                40 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 5 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 13
                12 * ((a11 >> 0) & 0xff)                            +
                16 * ((a12 >> 0) & 0xff)                            +
                 2 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                12 * ((a11 >> 8) & 0xff)                            +
                16 * ((a12 >> 8) & 0xff)                            +
                 2 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                36 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                48 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 6 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                36 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                48 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 6 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;

            a11 = *s11++;
            a12 = *s12++;
            a13 = *s13++;

            u = u +  // Output pixel pair 14
                 6 * ((a11 >> 0) & 0xff)                            +
                 8 * ((a12 >> 0) & 0xff)                            +
                 1 * ((a13 >> 0) & 0xff)                            ;
            v = v +
                 6 * ((a11 >> 8) & 0xff)                            +
                 8 * ((a12 >> 8) & 0xff)                            +
                 1 * ((a13 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                42 * ((a11 >> 0) & 0xff) + 48 * ((a11 >> 16) & 0xff) +
                56 * ((a12 >> 0) & 0xff) + 64 * ((a12 >> 16) & 0xff) +
                 7 * ((a13 >> 0) & 0xff) +  8 * ((a13 >> 16) & 0xff) ;
            v =
                42 * ((a11 >> 8) & 0xff) + 48 * ((a11 >> 24) & 0xff) +
                56 * ((a12 >> 8) & 0xff) + 64 * ((a12 >> 24) & 0xff) +
                 7 * ((a13 >> 8) & 0xff) +  8 * ((a13 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

        {
        // Initial values only set once in the beginning of loop
        uint32_t *s13 = (uint32_t *)(&src[(i * 15 + 13) * srcStride]);
        uint32_t *s14 = (uint32_t *)(&src[(i * 15 + 14) * srcStride]);
        uint16_t  *d = (uint16_t *)(&dst[(i * 8 + 7) * dstStride]);

        // Processing 30 source UV pixel pairs to 16 dest pixel pairs in each loop
        for (int j = 0; j < (dstW / 2); j += 16) {

            uint32_t u;  // Temp data (for constructing the output)
            uint32_t v;  // Temp data (for constructing the output)
            uint32_t a13; // Input data row 13
            uint32_t a14; // Input data row 14

            a13 = *s13++;
            a14 = *s14++;

            u =      // Output pixel pair 0  -----------------------
                56 * ((a13 >> 0) & 0xff) + 49 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) + 56 * ((a14 >> 16) & 0xff) ;
            v =
                56 * ((a13 >> 8) & 0xff) + 49 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) + 56 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 1  -----------------------
                                           7 * ((a13 >> 16) & 0xff) +
                                           8 * ((a14 >> 16) & 0xff) ;
            v =
                                           7 * ((a13 >> 24) & 0xff) +
                                           8 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 1
                56 * ((a13 >> 0) & 0xff) + 42 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) + 48 * ((a14 >> 16) & 0xff) ;
            v = v +
                56 * ((a13 >> 8) & 0xff) + 42 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) + 48 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 2  -----------------------
                                          14 * ((a13 >> 16) & 0xff) +
                                          16 * ((a14 >> 16) & 0xff) ;
            v =
                                          14 * ((a13 >> 24) & 0xff) +
                                          16 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 2
                56 * ((a13 >> 0) & 0xff) + 35 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) + 40 * ((a14 >> 16) & 0xff) ;
            v = v +
                56 * ((a13 >> 8) & 0xff) + 35 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) + 40 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 3  -----------------------
                                          21 * ((a13 >> 16) & 0xff) +
                                          24 * ((a14 >> 16) & 0xff) ;
            v =
                                          21 * ((a13 >> 24) & 0xff) +
                                          24 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 3
                56 * ((a13 >> 0) & 0xff) + 28 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) + 32 * ((a14 >> 16) & 0xff) ;
            v = v +
                56 * ((a13 >> 8) & 0xff) + 28 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) + 32 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 4  -----------------------
                                          28 * ((a13 >> 16) & 0xff) +
                                          32 * ((a14 >> 16) & 0xff) ;
            v =
                                          28 * ((a13 >> 24) & 0xff) +
                                          32 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 4
                56 * ((a13 >> 0) & 0xff) + 21 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) + 24 * ((a14 >> 16) & 0xff) ;
            v = v +
                56 * ((a13 >> 8) & 0xff) + 21 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) + 24 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 5  -----------------------
                                          35 * ((a13 >> 16) & 0xff) +
                                          40 * ((a14 >> 16) & 0xff) ;
            v =
                                          35 * ((a13 >> 24) & 0xff) +
                                          40 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 5
                56 * ((a13 >> 0) & 0xff) + 14 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) + 16 * ((a14 >> 16) & 0xff) ;
            v = v +
                56 * ((a13 >> 8) & 0xff) + 14 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) + 16 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 6  -----------------------
                                          42 * ((a13 >> 16) & 0xff) +
                                          48 * ((a14 >> 16) & 0xff) ;
            v =
                                          42 * ((a13 >> 24) & 0xff) +
                                          48 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 6
                56 * ((a13 >> 0) & 0xff) +  7 * ((a13 >> 16) & 0xff) +
                64 * ((a14 >> 0) & 0xff) +  8 * ((a14 >> 16) & 0xff) ;
            v = v +
                56 * ((a13 >> 8) & 0xff) +  7 * ((a13 >> 24) & 0xff) +
                64 * ((a14 >> 8) & 0xff) +  8 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 7  -----------------------
                                          49 * ((a13 >> 16) & 0xff) +
                                          56 * ((a14 >> 16) & 0xff) ;
            v =
                                          49 * ((a13 >> 24) & 0xff) +
                                          56 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 7
                56 * ((a13 >> 0) & 0xff)                            +
                64 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                56 * ((a13 >> 8) & 0xff)                            +
                64 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 8  -----------------------
                                          56 * ((a13 >> 16) & 0xff) +
                                          64 * ((a14 >> 16) & 0xff) ;
            v =
                                          56 * ((a13 >> 24) & 0xff) +
                                          64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 8
                49 * ((a13 >> 0) & 0xff)                            +
                56 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                49 * ((a13 >> 8) & 0xff)                            +
                56 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 9  -----------------------
                 7 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                 8 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                 7 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                 8 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 9
                42 * ((a13 >> 0) & 0xff)                            +
                48 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                42 * ((a13 >> 8) & 0xff)                            +
                48 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 10  -----------------------
                14 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                16 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                14 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                16 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 10
                35 * ((a13 >> 0) & 0xff)                            +
                40 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                35 * ((a13 >> 8) & 0xff)                            +
                40 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 11  -----------------------
                21 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                24 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                21 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                24 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 11
                28 * ((a13 >> 0) & 0xff)                            +
                32 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                28 * ((a13 >> 8) & 0xff)                            +
                32 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 12  -----------------------
                28 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                32 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                28 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                32 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 12
                21 * ((a13 >> 0) & 0xff)                            +
                24 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                21 * ((a13 >> 8) & 0xff)                            +
                24 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 13  -----------------------
                35 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                40 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                35 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                40 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 13
                14 * ((a13 >> 0) & 0xff)                            +
                16 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                14 * ((a13 >> 8) & 0xff)                            +
                16 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 14  -----------------------
                42 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                48 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                42 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                48 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;

            a13 = *s13++;
            a14 = *s14++;

            u = u +  // Output pixel pair 14
                 7 * ((a13 >> 0) & 0xff)                            +
                 8 * ((a14 >> 0) & 0xff)                            ;
            v = v +
                 7 * ((a13 >> 8) & 0xff)                            +
                 8 * ((a14 >> 8) & 0xff)                            ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);

            u =      // Output pixel pair 15  -----------------------
                49 * ((a13 >> 0) & 0xff) + 56 * ((a13 >> 16) & 0xff) +
                56 * ((a14 >> 0) & 0xff) + 64 * ((a14 >> 16) & 0xff) ;
            v =
                49 * ((a13 >> 8) & 0xff) + 56 * ((a13 >> 24) & 0xff) +
                56 * ((a14 >> 8) & 0xff) + 64 * ((a14 >> 24) & 0xff) ;
            u = (u + 112) / 225;
            v = (v + 112) / 225;
            *d++ = u | (v << 8);
        }   }

    }

}

}
